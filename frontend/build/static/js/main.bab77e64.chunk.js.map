{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","redux/api/stockPageApi.js","components/utils.js","pages/stockPage/Stock.js","pages/shiftListPage/ShiftsComponent.js","pages/shiftListPage/Shifts.js","redux/api/shiftListPageApi.js","pages/shiftCreatePage/ShiftCreateComponent.js","pages/shiftCreatePage/CreateShift.js","redux/api/shiftCreatePageApi.js","redux/api/saleCreatePageApi.js","pages/saleCreatePage/SaleCommon.js","pages/saleCreatePage/SaleCreateCommon.js","pages/saleListPage/SaleList.js","redux/api/saleListPageApi.js","pages/expensesPage/ExpensesComponent.js","pages/expensesPage/Expenses.js","redux/api/expensesPageApi.js","components/DailyRep.js","containers/manager/DailyRep.js","containers/manager/RamshikPayments.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","setShopToSee","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","shopToSee","AuthSelectors","getUser","state","shop","merge","data","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","SET_SHOP_TO_SEE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","STOCK_PAGE_STOCK","STOCK_PAGE_SET_LUMBER_PRICE","SHIFT_LIST_PAGE_LIST","shift_list_delete","id","SHIFT_CREATE_PAGE_DATA","SHIFT_CREATE_PAGE_CREATE","SALE_CREATE_PAGE_DATA","SALE_CREATE_PAGE_CREATE","SALE_LIST_PAGE_LIST","sale_list_delete","EXPENSES_PAGE_LIST","EXPENSES_PAGE_CREATE","expenses_page_delete","STOCK","SHIFTS","SALES","RESAWS","DAILY_REP","SALE_CALC_DATA","INCOME_TIMBERS","QUOTAS","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","EMPLOYEE_CREATE","manager_ramshiki_delete","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","MANAGER_RAWSTOCK_INCOME_INIT_DATA","MANAGER_RAWSTOCK_INCOME_CREATE","manager_rawstock_income_delete","MANAGER_SHIFT_CREATE_DATA","MANAGER_SHIFT_CREATE","manager_shift_delete","MANAGER_SALE_INIT_DATA","MANAGER_SALE_CREATE","manager_delete_sale","MANAGER_CASH_RECORDS_LIST","MANAGER_CASH_RECORDS_CREATE","manager_delete_expense","MANAGER_RESAW_CREATE","manager_delete_resaw","CAPO_BOSS_PAYOUT_MANAGER_CREATE","boss_delete_manager_payout","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","DateFilter","startDate","endDate","setData","showResults","value","onChange","shrink","onClick","DayFilter","date","MenuItem","history","useHistory","push","to","style","title","ShopMenu","can_see_shop_stock","reduxForm","validate","values","errors","forEach","field","Main","login","this","CircularProgress","Component","connect","routing","loginForm","dispatch","logout","HeaderComp","histoty","lineHeight","nickname","Header","modalOpen","parseErrorData","errorObj","statusText","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","map","getStock","method","url","headers","setLumberPrice","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","length","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","jsDateTimeToStrDate","jsDate","stockApi","TrRow","lumber","showNull","changeMarketCost","show","current_stock_quantity","wood_species","woodSpeciesClass","full_name","current_stock_volume","toFixed","is_manager","shop_rate","e","is_kladman","stock_total_cash","ManagerStock","lumberId","lumbers","parseInt","target","setState","results","totalVolume","totalCash","Switch","checked","ShiftLumberTr","record","includes","quantity","volume","rate","total_cash","ShiftComponent","shift","deleteShift","shift_type","employees","back_calc_cash","lumber_records","ShiftList","shiftList","shiftListApi","getShiftList","ManagerShiftList","date_before","date_after","shifts","yesterday","setDate","FilteredLumberTr","calcType","calcRowAndTotal","tr","volume_total","employee_rate","cash","lumber_type","LumberTableMixed","LumberTable","lumber_record","ShiftToSave","saveData","back","rowClass","employee_cash","note","raw_records","CreatedShift","back_calc_volume","EmployeesBlock","activeEmployees","addEmployee","emp","aEmp","shiftCreateApi","getInitData","createShift","dataToSave","ShiftCreateComponent","calcRowQuantity","qnty","calcRowRate","calcTotalVolume","totalVolumeVar","calcTotalCash","totalCashVar","calcLumber","employee","preSave","eIds","employeesData","cash_per_employee","createdShift","initLumbers","switchCalc","totaCash","initData","createSale","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","setRamaPrice","variant","selling_price","selling_total_cash","LumberOptGroup","woodSpecie","lumberType","pineBrus","pineDoska","larchBrus","larchDoska","lumberOptions","LumbersToSale","setLumberID","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","stockType","lumberRef","useRef","useState","currentWoodSpecies","setCurrentWoodSpecies","currentLumberType","setCurrentLumberType","filterBtnClass","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","calc_type","china_volume","SaleCheckList","setAddParams","seller","sellers","client","delivery_fee","FormControl","s","LumbersTable","CreatedSale","sale","seller_fee","SaleCommonToCreate","loader","deliveryFee","sale_cash","saleCreateApi","SaleCreateCommonContainer","addLumberToSale","lumbersToSale","lumberData","calcTotal","parseFloat","round_volume","setShopPrice","shop_price","setChinaVira","china_vira","bonus_kladman_label","bonus_kladman","createdSale","stock_type","shop_type","pine_brus_lumbers","larch_brus_lumbers","pine_doska_lumbers","larch_doska_lumbers","kladman_id","saleListApi","getSaleList","deleteSale","SalesTable","sales","totals","sale_type","shop_total_cash","kladman_fee","seller_name","total_selling_cash","total_seller_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","ExpensesList","expenses","deleteExpense","expense","amount","CreateExpense","setCount","setNote","createExpense","expensesApi","getExpenses","ExpensesContainer","createdExpense","records","total","created_at_after","SalesList","sales_totals","sellers_fee","CashRecordsList","record_type","DailyRepContainer","KLADMAN_EXPENSE_CREATE","allRecords","res","expense_records","total_expenses","expense_records_total","incomes","income_records","total_incomes","income_records_total","records_total","sales_sellers_fee","LastOperations","lastOperations","op","created_at","CreateRamshik","newCash","newName","createRamshik","open","setOpen","RamshikPayments","payout","activeEmployee","formData","FormData","last_payouts","deleteRamshik","cash_amount","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.bab77e64.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\n\r\nconst { Types, Creators } = createActions({\r\n  loginRequest: ['data'],\r\n  loginSuccess: ['user'],\r\n  loginFailure: ['error'],\r\n\r\n  signupRequest: ['data'],\r\n  signupSuccess: ['user'],\r\n  signupFailure: ['error'],\r\n\r\n  logoutRequest: null,\r\n  logoutSuccess: null,\r\n  logoutFailure: ['error'],\r\n\r\n  checkTokenRequest: ['payload'],\r\n  checkTokenSuccess: ['payload'],\r\n  checkTokenFail: ['error'],\r\n\r\n  resetAuthErrors: null,\r\n\r\n  restorePasswordRequest: ['data'],\r\n  restorePasswordSuccess: null,\r\n  restorePasswordFailure: ['error'],\r\n\r\n  toggleModal: ['isAuthModalOpen'],\r\n  \r\n  checkAuthRequest: ['payload'],\r\n  checkAuthSuccess: ['payload'],\r\n  checkAuthFail: null,\r\n\r\n  setShopToSee: ['shop'],\r\n})\r\n\r\nexport const AuthTypes = Types\r\nexport default Creators\r\n\r\n/* ------------- Initial State ------------- */\r\n\r\nexport const INITIAL_STATE = Immutable({\r\n  fetching: false,\r\n  user: null,\r\n  error: '',\r\n  isLoggedIn: false,\r\n  isLoggingIn: false,\r\n  shopToSee: {},\r\n})\r\n\r\n/* ------------- Selectors ------------- */\r\n\r\nexport const AuthSelectors = {\r\n  getUser: state => state.user\r\n}\r\n\r\n/* ------------- Reducers ------------- */\r\n\r\n// shop to see\r\nexport const setShopToSee = (state, { shop }) => {\r\n  return state.merge({ shopToSee: shop })\r\n}\r\n\r\n// login request\r\nexport const loginRequest = (state, { data }) => {\r\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false, shopToSee: {} })\r\n}\r\n  \r\n\r\n// login success\r\nexport const loginSuccess = (state, { user }) => {\r\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\r\n}\r\n\r\n// login fail\r\nexport const loginFailure = (state, action) => {\r\n  const { error } = action\r\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\r\n}\r\n\r\n// register request\r\nexport const signUpRequest = (state, { data }) =>\r\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\r\n\r\n// register success\r\nexport const signUpSuccess = (state, { user }) => {\r\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\r\n}\r\n\r\n// register fail\r\nexport const signUpFailure = (state, { error }) => {\r\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\r\n}\r\n\r\n// logout request\r\nexport const logoutRequest = (state) => {\r\n  return state.merge({ fetching: true, isLoggingIn: true })\r\n}\r\n  \r\n\r\n// logout success\r\nexport const logoutSuccess = (state) => {\r\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\r\n}\r\n\r\n// logout fail\r\nexport const logoutFailure = (state, { error }) => {\r\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\r\n}\r\n\r\nexport const resetAuthErrors = (state) => {\r\n  return state.merge({ fetching: false, error: null })\r\n}\r\n\r\n// auth modal toggle \r\n\r\nexport const toggleModal = (state, { isAuthModalOpen }) => {\r\n  return state.merge({ isAuthModalOpen, error: null })\r\n}\r\n  \r\nexport const checkTokenRequest = (state, { payload }) => {\r\n  return state.merge({ fetching: true })\r\n}\r\n\r\nexport const checkTokenSuccess = (state, { payload }) => {\r\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\r\n}\r\n\r\nexport const checkTokenFail = (state, { error }) => {\r\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\r\n}\r\n\r\nexport const checkAuthSuccess = (state, { payload }) => {\r\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  [Types.SET_SHOP_TO_SEE]: setShopToSee,\r\n\r\n  [Types.LOGIN_REQUEST]: loginRequest,\r\n  [Types.LOGIN_SUCCESS]: loginSuccess,\r\n  [Types.LOGIN_FAILURE]: loginFailure,\r\n  [Types.SIGNUP_REQUEST]: signUpRequest,\r\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\r\n  [Types.SIGNUP_FAILURE]: signUpFailure,\r\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\r\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\r\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\r\n  [Types.LOGOUT_REQUEST]: logoutRequest,\r\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\r\n  [Types.LOGOUT_FAILURE]: logoutFailure,\r\n  [Types.TOGGLE_MODAL]: toggleModal,\r\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\r\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\r\n})\r\n","const localUrl = 'http://192.168.0.49:8000'\r\nconst prodUrl = 'http://77.222.54.204'\r\n\r\nexport const url = (process.env.REACT_APP_ENV === 'local' && localUrl) || (process.env.REACT_APP_ENV === 'prod' && prodUrl);\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    // stock page\r\n    STOCK_PAGE_STOCK: `${apiUrl}/stock_page/`,\r\n    STOCK_PAGE_SET_LUMBER_PRICE: `${apiUrl}/stock_page/set_price/`,\r\n\r\n    // shift list page\r\n    SHIFT_LIST_PAGE_LIST: `${apiUrl}/shift_list_page/`,\r\n    shift_list_delete: (id) => `${apiUrl}/shift_list_page/${id}/`,\r\n\r\n    //shift create page\r\n    SHIFT_CREATE_PAGE_DATA: `${apiUrl}/shift_create_page/init/`,\r\n    SHIFT_CREATE_PAGE_CREATE: `${apiUrl}/manager/shifts/create/`,\r\n\r\n    // sale create page\r\n    SALE_CREATE_PAGE_DATA: `${apiUrl}/sale_create_page/init/`,\r\n    SALE_CREATE_PAGE_CREATE: `${apiUrl}/sale_create_page/create/`,\r\n\r\n    // sale list page\r\n    SALE_LIST_PAGE_LIST: `${apiUrl}/sale_list_page/`,\r\n    sale_list_delete: (id) => `${apiUrl}/sale_list_page/${id}/`,\r\n\r\n    // expenses page\r\n    EXPENSES_PAGE_LIST: `${apiUrl}/expenses_page/list/`,\r\n    EXPENSES_PAGE_CREATE: `${apiUrl}/expenses_page/create_expense/`,\r\n    expenses_page_delete: (id) => `${apiUrl}/expenses_page/${id}/`,\r\n\r\n    //common_api\r\n    STOCK: `${apiUrl}/common/stock/`,\r\n    SHIFTS: `${apiUrl}/common/shifts/`,\r\n    SALES: `${apiUrl}/common/sales/`,\r\n    RESAWS: `${apiUrl}/common/resaw/`,\r\n    DAILY_REP: `${apiUrl}/common/daily_report/`,\r\n    SALE_CALC_DATA: `${apiUrl}/common/sales/calc_data/`,\r\n    INCOME_TIMBERS: `${apiUrl}/common/income_timbers/`,\r\n    QUOTAS: `${apiUrl}/common/quotas/`,\r\n\r\n    // ramshik api\r\n    // RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    // RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    EMPLOYEE_CREATE: `${apiUrl}/manager/ramshiki/create/`,\r\n    manager_ramshiki_delete: (id) => `${apiUrl}/manager/ramshiki/${id}/`,\r\n\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    \r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n    \r\n    MANAGER_RAWSTOCK_INCOME_INIT_DATA: `${apiUrl}/manager/rawstock/timber/create_income/init_data/`,\r\n    MANAGER_RAWSTOCK_INCOME_CREATE: `${apiUrl}/manager/rawstock/timber/create_income/`,\r\n    manager_rawstock_income_delete: (id) => `${apiUrl}/manager/rawstock/timber/income_timbers/${id}/`,\r\n\r\n    MANAGER_SHIFT_CREATE_DATA: `${apiUrl}/manager/shifts/create/init_data/`,\r\n    MANAGER_SHIFT_CREATE: `${apiUrl}/manager/shifts/create/`,\r\n    manager_shift_delete: (id) => `${apiUrl}/manager/shifts/${id}/`,\r\n\r\n    MANAGER_SALE_INIT_DATA: `${apiUrl}/manager/sales/create/init_data/`,\r\n    MANAGER_SALE_CREATE: `${apiUrl}/manager/sales/create/`,\r\n    manager_delete_sale: (id) => `${apiUrl}/manager/sales/${id}/`,\r\n\r\n    MANAGER_CASH_RECORDS_LIST: `${apiUrl}/manager/cash_records/list/`,\r\n    MANAGER_CASH_RECORDS_CREATE: `${apiUrl}/manager/cash_records/create_expense/`,\r\n    manager_delete_expense: (id) => `${apiUrl}/manager/cash_records/${id}/`,\r\n\r\n    MANAGER_RESAW_CREATE: `${apiUrl}/manager/resaws/create/`,\r\n    manager_delete_resaw: (id) => `${apiUrl}/manager/resaws/${id}/`,\r\n\r\n    CAPO_BOSS_PAYOUT_MANAGER_CREATE: `${apiUrl}/boss_capo/cash_records/payout_to_manager/`,\r\n    boss_delete_manager_payout: (id) => `${apiUrl}/boss_capo/cash_records/${id}/`,\r\n}","// @flow\r\n\r\nimport axios from 'axios';\r\nimport endpoints from './endpoints';\r\n\r\n\r\nconst create = () => {\r\n  const logIn = (data: { username: string, password: string}): void => {\r\n    const { username, password } = data;\r\n    \r\n     return axios.post(endpoints.JWT_AUTH, { username, password })\r\n      .then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw new Error(response);\r\n        }\r\n        return { token: response.data.token, user: response.data.user };\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\r\n      })\r\n      .then((response) => {\r\n          localStorage.setItem('token', response.token);\r\n          return response.user;\r\n      })\r\n  }\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  const checkToken = (payload: string) => {\r\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\r\n      .then(response => {\r\n        return { user: response.data.user }\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\r\n      })\r\n  }\r\n\r\n  const signUp = (payload: { email: string, phone: string}) => {\r\n    const { email, phone } = payload;\r\n    return axios.post(endpoints.SIGNUP, { email, phone })\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\r\n      })\r\n  }\r\n\r\n  const checkAuth = (payload: string ) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('Нет доступа')\r\n    }\r\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\r\n      .then(({ data }) => {\r\n        const { user } = data;\r\n        const { group } = user;\r\n\r\n        // TODO - in response group is number (id), must be a string\r\n        if (payload.indexOf(group) === -1) {\r\n          throw new Error('Нет доступа')\r\n        }\r\n        return user\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.message)\r\n      })\r\n  }\r\n\r\n  return {\r\n    logIn,\r\n    checkToken,\r\n    logOut,\r\n    signUp,\r\n    checkAuth\r\n  }\r\n}\r\n\r\nexport default {\r\n  create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n\r\n\r\nexport function DateFilter(props) {\r\n  const { startDate, endDate, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        label={'Дата с'}\r\n        type=\"date\"\r\n        name='startDate'\r\n        className='mr-2'\r\n        value={startDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <TextField\r\n        label={'Дата до'}\r\n        type=\"date\"\r\n        name='endDate'\r\n        className='mr-2'\r\n        value={endDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport function DayFilter(props) {\r\n  const { date, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        type=\"date\"\r\n        name='date'\r\n        className='mr-2'\r\n        value={date}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} "," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nexport function MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ShopMenu (props) {\r\n  const { user } = props\r\n  props.setShopToSee(user.can_see_shop_stock)\r\n\r\n  return (\r\n    <div className=' '>\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Склад</h3>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n      </div>\r\n\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Приход пиломатериалов</h3>\r\n          <MenuItem title={'Приход список'} to={'/manager/shift_list/'}/>\r\n          <MenuItem title={'Создать приход'} to={'/manager/shift/create_shift/'}/>\r\n      </div>     \r\n\r\n      {/* {user.is_manager &&\r\n        <div className='my-4'>\r\n          <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n        </div>\r\n      } */}\r\n     \r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Продажи</h3>\r\n        <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n      </div>\r\n      \r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Отчеты и расходы</h3>\r\n        <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>\r\n        <MenuItem title={'Расчет поставщиков'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, shopToSee } = this.props.state.auth\r\n    \r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <ShopMenu user={user} shopToSee={shopToSee} setShopToSee={this.props.setShopToSee}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  setShopToSee: (shop) => dispatch(AuthActions.setShopToSee(shop))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  function toMain () {\r\n    props.setShopToSee({})\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between px-3 py-2'>\r\n      <h4 className='text-center pt-2 w-100 pl-4' onClick={handleClickMenu}>{props.shopToSee.name}</h4>\r\n      <button className='btn btn-xs bg-red1-light' style={{lineHeight: '13px'}} onClick={handleClickLogout}>\r\n        <span className='py-0 my-0'>\r\n          <span className='d-block'>{props.user.nickname}</span>\r\n          выйти\r\n        </span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, shopToSee } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user} shopToSee={shopToSee} \r\n            setShopToSee={this.props.setShopToSee}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n  setShopToSee: (shop) => dispatch(AuthActions.setShopToSee(shop))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\r\n// standart serializer field error. There are could be several fields\r\n// {\r\n//     \"birth_id\": [\"This field is required.\"]\r\n// }\r\n\r\n\r\nexport const parseErrorData = (error) => {\r\n\r\n    if (error && typeof error.response !== 'undefined') {\r\n        let errorObj = {\r\n            status: error.response.status, \r\n            statusText: error.response.statusText,\r\n            message: null,\r\n            response: error.response,\r\n        }\r\n        if ('message' in error.response.data) {\r\n            errorObj.message = JSON.stringify(error.response.data.message)\r\n        }\r\n        else {\r\n            let message = ''\r\n            for (const property in error.response.data) {\r\n                message = message + `${property}: ${error.response.data[property]}. `\r\n              }\r\n            errorObj.message = message\r\n\r\n        }\r\n        return errorObj\r\n\r\n    } else {\r\n        return { \r\n         status: 'Connection Error',\r\n         statusText: 'An error occurred while sending your data!',\r\n         message: 'An error occurred while sending your data!' }\r\n    }\r\n}\r\n\r\nexport const createUrlParamsFromFilters = (filters) => {\r\n    const params = new URLSearchParams()\r\n\r\n    if (filters != null) Object.keys(filters).forEach(key => {\r\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \r\n                params.append(key, filters[key])\r\n            if (filters[key] !== null && filters[key] instanceof Array){\r\n                delete params[key]\r\n                filters[key].map(value => {\r\n                    if (value !== '')\r\n                        params.append(key, value)\r\n                    return null\r\n                })\r\n            }\r\n        })\r\n    return params\r\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const getStock = (filters) => {\r\n        const token = localStorage.getItem('token');\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios({\r\n            method: 'get',\r\n            url: endpoints.STOCK_PAGE_STOCK,\r\n            params: params,\r\n            headers: {'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const setLumberPrice = payload => {\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.STOCK_PAGE_SET_LUMBER_PRICE;\r\n\r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: payload,\r\n                    headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }  \r\n\r\n    return {\r\n        getStock,\r\n        setLumberPrice\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}\r\n\r\nexport function jsDateTimeToStr (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  let hours = jsDate.getHours();\r\n  let minutes = jsDate.getMinutes() > 9 ? jsDate.getMinutes(): '0' + jsDate.getMinutes();\r\n  return yyyy + '-' + mm + '-' + dd + 'T' + hours + ':' + minutes\r\n  \r\n}\r\n\r\nexport function jsDateTimeToStrDate (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  return yyyy + '-' + mm + '-' + dd \r\n  \r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/stockPageApi';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\n\r\n\r\nconst stockApi = endpoints.create();\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.full_name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(4)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_manager &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.shop_rate > 0 && lumber.shop_rate} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.shop_rate}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    stockApi.getStock({shop: this.props.shopToSee.id}).then(data => {\r\n      this.setState({ lumbers: data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost = (e, lumberId) => {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    stockApi.setLumberPrice({\r\n      lumber: lumberId,\r\n      shop_rate: parseInt(e.target.value) || 0\r\n    })\r\n    .then(data => {\r\n      lumber = data;\r\n    })\r\n\r\n    lumber.shop_rate = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.shop_rate * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { } from 'react';\r\n\r\n\r\nfunction ShiftLumberTr (props) {\r\n  const { record } = props\r\n  const measureClass = 'font-10'\r\n  return (\r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {record.wood_species === 'larch'  \r\n          ? <span className='d-block color-brown1-light'>листв</span>\r\n          : <span className='d-block color-green1-light'>сосна</span>\r\n        }\r\n        {record.lumber.includes('доска') \r\n          ? <span className='font-italic'>{record.lumber}</span>\r\n          : <span className=''>{record.lumber}</span>\r\n        }\r\n      </td>\r\n      <td>\r\n        {record.quantity}\r\n        <span className={measureClass}> шт</span>\r\n      </td>\r\n      <td>{record.volume}<span className={measureClass}> м3</span></td>\r\n      <td>{record.rate}<span className={measureClass}> р</span></td>\r\n      <td>{record.total_cash}<span className={measureClass}> р</span></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport function ShiftComponent (props) {\r\n  const { shift, user, deleteShift } = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content mb-1'>\r\n        <div className='d-flex justify-content-between'>\r\n          <p className='color-black mb-0 font-16'>Дата: {shift.date} {shift.shift_type}</p>\r\n          <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n            onClick={() => deleteShift(shift.id)}>\r\n              удалить\r\n          </button>\r\n        </div>\r\n        <p className='color-black mb-0 font-13 d-flex justify-content-between' style={{lineHeight: '15px'}}>\r\n          <span className='d-block mb-1'>Поставщик: <span className='d-block font-600 font-14'>{shift.employees[0]}</span></span>\r\n          <span className='d-block mb-1'>Объем: <span className='d-block font-600 font-14'>{shift.volume} m3</span></span>          \r\n          <span>Общая сумма: <span className='d-block font-600 font-14'>{shift.back_calc_cash} р</span></span>\r\n        </p>\r\n      </div>\r\n      <div className='content mt-0'>\r\n        <table className='table table-sm'>\r\n          <thead>\r\n            <th>Пиломат</th>\r\n            <th>кол-во</th>\r\n            <th>объем</th>\r\n            <th>цена</th>\r\n            <th>сумма</th>\r\n          </thead>\r\n          <tbody>\r\n            {shift.lumber_records.map(record => \r\n              <ShiftLumberTr record={record}/>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShiftList (props) {\r\n  const { shiftList, user, deleteShift } = props\r\n  return (\r\n    <div className='mt-2'>\r\n      <h4 className='my-3 text-center'>Смены  ({shiftList.length})</h4>\r\n      {shiftList.length > 0 && shiftList.map(shift => \r\n          <ShiftComponent shift={shift} user={user} deleteShift={deleteShift}/>\r\n      )}\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport endpoints from '../../redux/api/shiftListPageApi';\r\n\r\nimport { ShiftList } from './ShiftsComponent';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\nconst shiftListApi = endpoints.create();\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n\r\n    shiftListApi.getShiftList({shop: this.props.shopToSee.id, \r\n      date_before: endDate, date_after:startDate})\r\n    .then(data => {\r\n      this.setState({ ...this.state, shiftList: data.results, startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  setData = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults = () => {\r\n    shiftListApi.getShiftList({shop: this.props.shopToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate})\r\n    .then(data => {\r\n      this.setState({ ...this.state, shiftList: data.results});\r\n    })\r\n  }\r\n\r\n  deleteShift = (id) => {\r\n    shiftListApi.deleteShift(id)\r\n    .then(data => {\r\n      this.setState({ shiftList: data.shifts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <ShiftList shiftList={this.state.shiftList} user={this.props.user} deleteShift={this.deleteShift}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const getShiftList = (filters) => {\r\n        const token = localStorage.getItem('token');\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios({\r\n            method: 'get',\r\n            url: endpoints.SHIFT_LIST_PAGE_LIST,\r\n            headers: {'Authorization': `JWT ${token}` },\r\n            params: params\r\n          })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const deleteShift = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n\r\n        return axios({\r\n            method: 'delete',\r\n            url: endpoints.shift_list_delete(id),\r\n            headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }  \r\n\r\n    return {\r\n        getShiftList,\r\n        deleteShift\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import React, { } from 'react';\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.full_name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n          name='quantity'\r\n          type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n          name='rate'\r\n          type='number' className='w-100' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n          value={lumber.employee_rate > 0 && lumber.employee_rate}/>\r\n      </td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Цена</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за м3\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n        <div className=''>\r\n          <p className={rowClass}>\r\n            Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n          <p className={rowClass}>\r\n            Общая сумма: {shift.employee_cash.toFixed(1)} рублей</p>\r\n          <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n          <LumberTable lumbers={shift.raw_records}/>\r\n        </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Приход сохранен</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма: {shift.employee_cash && shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто поставщик? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import endpoints from '../../redux/api/endpoints';\r\nimport endpoints from '../../redux/api/shiftCreatePageApi';\r\nimport { replaceItemInDictArrayById, lodashToggle, toggleArrayDictById } from '../../components/utils';\r\nimport { ShiftToSave, CreatedShift, LumberTableMixed, EmployeesBlock } from './ShiftCreateComponent';\r\n\r\nconst shiftCreateApi = endpoints.create();\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    shiftCreateApi.getInitData()\r\n      .then(data => {\r\n        const initData = data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRowQuantity = (lumber, qnty) => {\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * lumber.employee_rate,\r\n      employee_rate: lumber.employee_rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcRowRate = (lumber, rate) => {\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: lumber.quantity,\r\n      volume_total: lumber.quantity * lumber.volume,\r\n      cash: lumber.quantity * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume = (lumbers) => {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash = (lumbers) => {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal = (e, lumber) => {\r\n    let { lumbers } = this.state\r\n    let calcLumber\r\n    if (e.target.name === 'quantity') {\r\n      calcLumber = this.calcRowQuantity(lumber, e.target.value)\r\n    }\r\n    if (e.target.name === 'rate') {\r\n      calcLumber = this.calcRowRate(lumber, e.target.value)\r\n    }\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee = (employee) => {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave = () => {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees  } = this.state\r\n\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData = () => {\r\n    shiftCreateApi.createShift(this.state.dataToSave)\r\n      .then(data => {\r\n        this.setState({ message: 'Данные записаны.', createdShift: data });\r\n      })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back = () => {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc = (calcType) => {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, message, createdShift, dataToSave, calcType, \r\n      activeEmployees, employees}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) > 0 &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='mt-4 btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({  \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShiftCreateComponent);","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const getInitData = (filters) => {\r\n        const token = localStorage.getItem('token');\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios({\r\n            method: 'get',\r\n            url: endpoints.SHIFT_CREATE_PAGE_DATA,\r\n            params: params,\r\n            headers: {'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createShift = dataToSave => {\r\n        const token = localStorage.getItem('token') || '';\r\n\r\n        return axios({\r\n            method: 'post',\r\n            url: endpoints.SHIFT_CREATE_PAGE_CREATE,\r\n            data: dataToSave,\r\n            headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }  \r\n\r\n    return {\r\n        getInitData,\r\n        createShift\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const getInitData = (filters) => {\r\n        const token = localStorage.getItem('token');\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios({\r\n            method: 'get',\r\n            url: endpoints.SALE_CREATE_PAGE_DATA,\r\n            params: params,\r\n            headers: {'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createSale = dataToSave => {\r\n        const token = localStorage.getItem('token') || '';\r\n\r\n        return axios({\r\n            method: 'post',\r\n            url: endpoints.SALE_CREATE_PAGE_CREATE,\r\n            data: dataToSave,\r\n            headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }  \r\n\r\n    return {\r\n        getInitData,\r\n        createSale\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import React, { useState, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from '../../components/utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function LumberOptGroup (props) {\r\n  const { woodSpecie, lumberType, pineBrus, pineDoska, larchBrus, larchDoska } = props\r\n  let lumberOptions = []\r\n  if (woodSpecie === 'pine' && lumberType === 'brus') lumberOptions = pineBrus\r\n  if (woodSpecie === 'pine' && lumberType === 'doska') lumberOptions = pineDoska\r\n  if (woodSpecie === 'larch' && lumberType === 'brus') lumberOptions = larchBrus\r\n  if (woodSpecie === 'larch' && lumberType === 'doska') lumberOptions = larchDoska\r\n  \r\n  return (\r\n    <optgroup label>\r\n      {lumberOptions.map(lumber =>\r\n        <option value={lumber.id} >{`${lumber.name} ${lumber.wood_species}`} </option>\r\n        )}\r\n    </optgroup>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  const woodSpecies = [['pine', 'сосна'], ['larch', 'лиственница']]\r\n  const [currentWoodSpecies, setCurrentWoodSpecies] = useState('pine');\r\n\r\n  const lumberTypes = [['brus', 'брус'], ['doska', 'доска']]\r\n  const [currentLumberType, setCurrentLumberType] = useState('brus');\r\n\r\n  const filterBtnClass = 'btn btn-m border w-100 mx-2'\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='text-center font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n\r\n      <div className='d-flex justify-content-around my-2'>\r\n        {woodSpecies.map(woodSpecie =>\r\n          <button className={woodSpecie[0] === currentWoodSpecies ? filterBtnClass + ' bg-green2-light' \r\n            : filterBtnClass} \r\n            onClick={() => setCurrentWoodSpecies(woodSpecie[0])}>\r\n            {woodSpecie[1]}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className='d-flex justify-content-around mb-2'>\r\n        {lumberTypes.map(lumberType =>\r\n          <button className={lumberType[0] === currentLumberType ? filterBtnClass + ' bg-yellow1-light' \r\n            : filterBtnClass} \r\n            onClick={() => setCurrentLumberType(lumberType[0])}>\r\n            {lumberType[1]}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <LumberOptGroup woodSpecie={currentWoodSpecies} lumberType={currentLumberType}\r\n          pineBrus={pineBrus} pineDoska={pineDoska} larchBrus={larchBrus} larchDoska={larchDoska} />\r\n      </Select>\r\n\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { setAddParams, seller, sellers, client, delivery_fee, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-4'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            {/* <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p> */}\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            {/* <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p> */}\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/saleCreatePageApi';\r\n\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } from './SaleCommon';\r\n\r\nconst saleCreateApi = endpoints.create();\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    saleCreateApi.getInitData({stock_type: this.props.user.shop_type})\r\n    .then(initData => {\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID = (e, id) => {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setShopPrice = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.shop_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc = (id, calcType) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal = (lumbers) => {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber = (id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams = (e) => {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira = (e) => {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave = () => {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData = () => {\r\n    saleCreateApi.createSale(this.state.dataToSave)\r\n    .then(data => {\r\n      this.setState({ message: data.message, createdSale: data.sale });\r\n    })\r\n  }\r\n\r\n  back = () => {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.shop_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setShopPrice={this.setShopPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/saleListPageApi';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\nconst saleListApi = endpoints.create();\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale, shop } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        <th>Сумма/Объем</th>\r\n        <th style={{lineHeight: '13px'}}>\r\n        {shop.sale_type === 'seller_kladman_same' \r\n          ? 'Продавeц (комиссия кладмэна из вознаграждения продавца)'\r\n          : 'Продавeц'\r\n        }\r\n        </th>\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Удалить</th>\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>розница общ <span className='font-500'>\r\n                    {lumber.selling_total_cash}</span></span>\r\n                  <span className='d-block font-italic'>розница 1м3 <span className='font-500'>\r\n                    {lumber.selling_price}</span></span>\r\n                  <span className='d-block font-italic'>опт общ <span className='font-500'>\r\n                    {lumber.shop_total_cash}</span></span>\r\n                  <span className='d-block font-italic'>опт 1м3 <span className='font-500'>\r\n                    {lumber.shop_price}</span></span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td >\r\n              <span>{sale.selling_total_cash}р</span>\r\n              <span className='d-block'>{sale.volume} м3</span>\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {shop.sale_type === 'seller_kladman_same' \r\n                ? <span className='d-block'>\r\n                    <span className='d-block'>{sale.seller_fee - sale.kladman_fee}</span>\r\n                    {`(${sale.seller_fee}  - ${sale.kladman_fee})`}\r\n                  </span>\r\n                : <span className='d-block'>{sale.seller_fee}</span>\r\n              }\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>\r\n            {shop.sale_type === 'seller_kladman_same' \r\n             ? <span>\r\n                  <span className='d-block'>{totals.total_seller_fee - totals.total_kladman_fee}</span>\r\n                  {`(${totals.total_seller_fee}  - ${totals.total_kladman_fee})`}\r\n               </span>\r\n             : totals.total_seller_fee\r\n            }\r\n          </td>\r\n\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n\r\n    saleListApi.getSaleList({shop: this.props.shopToSee.id, \r\n      date_before: endDate, date_after:startDate})\r\n    .then(data => {\r\n      this.setState({ ...this.state, saleList: data.sales, totals: data.totals,\r\n        startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  deleteSale = (e) => {\r\n    saleListApi.deleteSale(e.target.value)\r\n    .then(data => {\r\n      this.setState({ ...this.state, saleList: data.sales, totals: data.totals });\r\n    })\r\n  }\r\n\r\n  setData = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults = () => {\r\n    saleListApi.getSaleList({shop: this.props.shopToSee.id, date_before: this.state.endDate,\r\n       date_after: this.state.startDate})\r\n    .then(data => {\r\n      this.setState({ ...this.state, saleList: data.sales, totals: data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}\r\n                  shop={this.props.shopToSee} />\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleList);","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const getSaleList = (filters) => {\r\n        const token = localStorage.getItem('token');\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios({\r\n            method: 'get',\r\n            url: endpoints.SALE_LIST_PAGE_LIST,\r\n            headers: {'Authorization': `JWT ${token}` },\r\n            params: params\r\n          })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const deleteSale = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n\r\n        return axios({\r\n            method: 'delete',\r\n            url: endpoints.sale_list_delete(id),\r\n            headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }  \r\n\r\n    return {\r\n        getSaleList,\r\n        deleteSale\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses, deleteExpense } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n            \r\n            <td>\r\n              <button className='btn btn-s bg-red1-light' onClick={() => deleteExpense(expense.id)}>\r\n                Удалить\r\n              </button>\r\n            </td>\r\n            \r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/expensesPageApi';\r\nimport { getToday } from '../../components/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from './ExpensesComponent';\r\n\r\nconst expensesApi = endpoints.create();\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    expensesApi.getExpenses({created_at_after: getToday()})    \r\n    .then(initData => {\r\n      this.setState({ \r\n        expenses: initData.records,\r\n        total: initData.total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense = (expense) => {\r\n    expensesApi.createExpense(expense)\r\n    .then(data => {\r\n      this.setState({ message: data.message, createdExpense: data.expense, expenses: data.records,\r\n         total: data.total });\r\n    })\r\n  }\r\n\r\n  deleteExpense = (id) => {\r\n    expensesApi.deleteExpense(id)\r\n    .then(data => {\r\n      this.setState({ ...this.state, expenses: data.records, total: data.totals, amount: 0 });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses} user={this.props.user} deleteExpense={this.deleteExpense}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpensesContainer);","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const getExpenses = (filters) => {\r\n        const token = localStorage.getItem('token');\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios({\r\n            method: 'get',\r\n            url: endpoints.EXPENSES_PAGE_LIST,\r\n            params: params,\r\n            headers: {'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createExpense = payload => {\r\n        const token = localStorage.getItem('token') || '';\r\n\r\n        return axios({\r\n            method: 'post',\r\n            url: endpoints.EXPENSES_PAGE_CREATE,\r\n            data: payload,\r\n            headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const deleteExpense = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n\r\n        return axios({\r\n            method: 'delete',\r\n            url: endpoints.expenses_page_delete(id),\r\n            headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n          })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        getExpenses,\r\n        createExpense,\r\n        deleteExpense\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          {/* <th>Клад/груз</th> */}\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            {/* <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td> */}\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              {/* <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td> */}\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'shop_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/DailyRep';\r\nimport { DayFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n\r\n      date: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date: getToday(), shop: this.props.shopToSee.id});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee,\r\n        date: getToday()\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense = (expense) => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total, });\r\n    })\r\n  }\r\n\r\n  setData = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults = () => {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id, date: this.state.date});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0 '>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <DayFilter date={this.state.date} setData={this.setData} showResults={this.showResults} />\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyRepContainer);","import axios from 'axios';\r\n\r\nimport React, { Component, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Поставщик</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Оплата поставщику' : 'Долг поставщику с прихода'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateRamshik (props) {\r\n  const { newCash, newName, createRamshik, setData } = props\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const create = () => (\r\n    setOpen(false),\r\n    createRamshik()\r\n  )\r\n\r\n  return (\r\n    open \r\n      ? <div className='card card-style'>\r\n          <div className='content'>\r\n            <div className='  my-1'>\r\n              <TextField type='text' name='newName' value={newName} onChange={setData} label='Имя' \r\n                fullWidth className='mb-2'/>\r\n              <TextField type='number' name='newCash' value={newCash} onChange={setData} label='Баланс' fullWidth/>\r\n            </div>\r\n            <div className='d-flex justify-content-between mt-3'>\r\n              <button className='btn btn-s bg-highlight' onClick={create}>Создать</button>\r\n              <button className='btn btn-s bg-red1-light' onClick={() => setOpen(false)}>Отмена</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      : <div className='d-flex justify-content-center my-3'>\r\n          <button className='btn btn-l bg-highlight' onClick={setOpen}>\r\n            Создать нового поставщика\r\n          </button>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      newName: '',\r\n      newCash: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout = () => {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  setData = (e) =>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  createRamshik = () => {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_CREATE,\r\n      data: { nickname: this.state.newName, cash: this.state.newCash },\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  deleteRamshik = () => {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_ramshiki_delete(this.state.activeEmployee.id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет поставщиков</h4>\r\n            <div className=''>\r\n              {employees.length > 0 &&\r\n                  <table className='table table-sm'>\r\n                    <thead>\r\n                      <th>поставщик</th>\r\n                      <th>баланс</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {employees.map(employee => \r\n                        <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                          onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                          <td>{employee.nickname}</td>\r\n                          <td>{employee.cash} р /  {employee.cash_amount}</td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n              }\r\n              {activeEmployee && \r\n                <div className='w-100'>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <div className='d-flex justify-content-start mt-2 mb-4'>\r\n                    <TextField type='number' className='mr-3' value={amount}\r\n                      onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                    <button className='d-block btn btn-s bg-green2-light'\r\n                      onClick={this.payout}>\r\n                      Оплатить\r\n                    </button>\r\n                  </div>\r\n                  <button className='d-block btn btn-s bg-red1-light mt-2'\r\n                    onClick={this.deleteRamshik}>\r\n                    Удалить поставщика\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CreateRamshik newName={this.state.newName} newCash={this.state.newCash} setData={this.setData}\r\n          createRamshik={this.createRamshik}\r\n          />\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\n\r\nimport ManagerStock from './pages/stockPage/Stock';\r\nimport ManagerShiftList  from './pages/shiftListPage/Shifts';\r\nimport ShiftCreateComponent from './pages/shiftCreatePage/CreateShift';\r\n\r\nimport SaleCreateCommonContainer from './pages/saleCreatePage/SaleCreateCommon';\r\nimport SaleList from './pages/saleListPage/SaleList';\r\n\r\nimport ExpensesContainer from './pages/expensesPage/Expenses';\r\n\r\nimport DailyRepContainer from './containers/manager/DailyRep';\r\nimport ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3}>\r\n      <Router>\r\n        <div className='app' id=\"page\">\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={ManagerShiftList} />\r\n\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={ManagerStock} />\r\n\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={SaleList} />\r\n\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={ShiftCreateComponent} />\r\n\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={SaleCreateCommonContainer} />       \r\n\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={ExpensesContainer} />\r\n\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={DailyRepContainer} />\r\n\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={ManagerRamshikPayments} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}