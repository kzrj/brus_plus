{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/authApi.js","redux/sagas/authSagas.js","redux/sagas/index.js","redux/store/index.js","components/CommonForms.js","containers/Main.js","containers/HeaderContainer.js","redux/api/utils.js","components/utils.js","components/Shifts.js","containers/manager/Shifts.js","containers/manager/Stock.js","components/ShiftCreateComponent.js","containers/manager/CreateShift.js","components/SaleCommon.js","containers/manager/SaleCreateCommon.js","containers/manager/SaleList.js","components/DailyRep.js","containers/manager/DailyRep.js","components/Expenses.js","containers/manager/Expenses.js","components/Resaw.js","containers/manager/Resaw.js","containers/manager/RamshikPayments.js","containers/AuthContainer.js","index.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","signupRequest","signupSuccess","signupFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","resetAuthErrors","restorePasswordRequest","restorePasswordSuccess","restorePasswordFailure","toggleModal","checkAuthRequest","checkAuthSuccess","checkAuthFail","setShopToSee","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","shopToSee","AuthSelectors","getUser","state","shop","merge","data","action","signUpRequest","signUpSuccess","signUpFailure","isAuthModalOpen","payload","isLogginIn","reducer","createReducer","SET_SHOP_TO_SEE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","TOGGLE_MODAL","RESET_AUTH_ERRORS","CHECK_AUTH_SUCCESS","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","STOCK","SHIFTS","SALES","RESAWS","DAILY_REP","SALE_CALC_DATA","INCOME_TIMBERS","QUOTAS","RAMSHIK_SHIFT_LIST","RAMSHIK_PAYOUTS","EMPLOYEE_PAYOUT_INIT_DATA","EMPLOYEE_PAYOUT","EMPLOYEE_CREATE","manager_ramshiki_delete","id","MANAGER_SHIFT_LIST","MANAGER_STOCK","MANAGER_STOCK_SET_LUMBER_PRICE","MANAGER_SALE_LIST","MANAGER_RAWSTOCK_INCOME_INIT_DATA","MANAGER_RAWSTOCK_INCOME_CREATE","manager_rawstock_income_delete","MANAGER_SHIFT_CREATE_DATA","MANAGER_SHIFT_CREATE","manager_shift_delete","MANAGER_SALE_INIT_DATA","MANAGER_SALE_CREATE","manager_delete_sale","MANAGER_CASH_RECORDS_LIST","MANAGER_CASH_RECORDS_CREATE","manager_delete_expense","MANAGER_RESAW_CREATE","manager_delete_resaw","CAPO_BOSS_PAYOUT_MANAGER_CREATE","boss_delete_manager_payout","logIn","username","password","axios","post","endpoints","then","response","status","Error","token","catch","err","Object","keys","localStorage","setItem","checkToken","logOut","removeItem","signUp","email","phone","SIGNUP","checkAuth","getItem","group","indexOf","message","api","put","AuthActions","call","root","authApi","AuthApi","all","takeEvery","reducers","combineReducers","auth","require","form","formReducer","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","fullWidth","helperText","InputLabelProps","className","LoginForm","props","parentSubmit","pristine","submitting","reset","handleSubmit","eventFetching","eventError","onSubmit","Field","component","name","margin","type","disabled","DateFilter","startDate","endDate","setData","showResults","value","onChange","shrink","onClick","DayFilter","date","MenuItem","history","useHistory","push","to","style","title","ShopMenu","can_see_shop_stock","reduxForm","validate","values","errors","forEach","field","Main","login","this","console","log","CircularProgress","Component","connect","routing","loginForm","dispatch","logout","HeaderComp","histoty","lineHeight","nickname","Header","modalOpen","createUrlParamsFromFilters","filters","params","URLSearchParams","key","Array","append","map","lodashToggle","array","item","_","xor","getObjectbyId","list","obj","element","toggleArrayDictById","arr","alreadyIn","index","i","length","splice","replaceItemInDictArrayById","itemInList","slice","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","jsDateTimeToStrDate","jsDate","ShiftLumberTr","record","wood_species","lumber","includes","quantity","volume","rate","total_cash","ShiftComponent","shift","deleteShift","shift_type","employees","back_calc_cash","lumber_records","ShiftList","shiftList","ManagerShiftList","e","setState","target","date_before","date_after","method","url","headers","results","shifts","yesterday","setDate","TrRow","showNull","changeMarketCost","show","current_stock_quantity","woodSpeciesClass","current_stock_volume","toFixed","is_manager","shop_rate","is_kladman","stock_total_cash","ManagerStock","lumbers","bind","res","lumberId","parseInt","totalVolume","totalCash","Switch","checked","FilteredLumberTr","calcType","calcRowAndTotal","tr","volume_total","employee_rate","cash","lumber_type","LumberTableMixed","LumberTable","lumber_record","ShiftToSave","saveData","back","rowClass","employee_cash","note","raw_records","CreatedShift","back_calc_volume","EmployeesBlock","activeEmployees","addEmployee","emp","aEmp","ShiftCreateComponent","calcRowQuantity","qnty","calcRowRate","calcTotalVolume","totalVolumeVar","calcTotalCash","totalCashVar","calcLumber","employee","preSave","eIds","employeesData","cash_per_employee","dataToSave","createdShift","initLumbers","switchCalc","totaCash","initData","LumberInputs","calcRowQnty","calcRowVolume","calcRowCash","setRamaPrice","variant","selling_price","selling_total_cash","LumberOptGroup","woodSpecie","lumberType","pineBrus","pineDoska","larchBrus","larchDoska","lumberOptions","LumbersToSale","setLumberID","turnCalc","delLumber","calcRoundRowQnty","calcRoundRowVolume","calcChinaRowQnty","calcChinaRowVolume","stockType","lumberRef","useRef","useState","currentWoodSpecies","setCurrentWoodSpecies","currentLumberType","setCurrentLumberType","filterBtnClass","ref","InputLabel","htmlFor","Select","native","defaultValue","data-id","current","scrollIntoView","aria-label","calc_type","china_volume","SaleCheckList","setAddParams","seller","sellers","client","delivery_fee","FormControl","s","LumbersTable","CreatedSale","sale","seller_fee","SaleCommonToCreate","loader","deliveryFee","sale_cash","SaleCreateCommonContainer","addLumberToSale","lumbersToSale","lumberData","calcTotal","parseFloat","round_volume","setShopPrice","shop_price","setChinaVira","china_vira","bonus_kladman_label","bonus_kladman","createdSale","stock_type","shop_type","pine_brus_lumbers","larch_brus_lumbers","pine_doska_lumbers","larch_doska_lumbers","kladman_id","SalesTable","sales","totals","deleteSale","sale_type","shop_total_cash","kladman_fee","seller_name","total_selling_cash","total_seller_fee","total_kladman_fee","total_delivery_fee","total_add_expenses","SaleList","saleList","SalesList","sales_totals","sellers_fee","total","CashRecordsList","records","record_type","amount","DailyRepContainer","createExpense","expense","KLADMAN_EXPENSE_CREATE","createdExpense","allRecords","expenses","expense_records","total_expenses","expense_records_total","incomes","income_records","total_incomes","income_records_total","records_total","sales_sellers_fee","ExpensesList","deleteExpense","CreateExpense","setCount","setNote","ExpensesContainer","created_at_after","ResawInput","setLumber","lumber_input_label","lumber_input_quantity_label","pb","lb","pd","ld","CreatedResaw","resaw","created_at","lumber_in_quantity","lumber_in","lumber_out_quantity","lumber_out","ResawToCreate","lumberIn","lumberOut","ResawList","deleteResaw","rsw","who","lumber_in_wood_species","lumber_out_wood_species","ResawContainer","createdResaw","created","resawsList","resaws","LastOperations","lastOperations","op","CreateRamshik","newCash","newName","createRamshik","open","setOpen","RamshikPayments","payout","activeEmployee","formData","FormData","last_payouts","errorObj","statusText","JSON","stringify","property","parseErrorData","deleteRamshik","cash_amount","requireAuthentication","groups","AuthenticatedComponent","access","is_seller","React","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","maxSnack","exact","path","ManagerRamshikPayments","document","getElementById"],"mappings":"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","file":"static/js/main.7965dbd6.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\n\r\nconst { Types, Creators } = createActions({\r\n  loginRequest: ['data'],\r\n  loginSuccess: ['user'],\r\n  loginFailure: ['error'],\r\n\r\n  signupRequest: ['data'],\r\n  signupSuccess: ['user'],\r\n  signupFailure: ['error'],\r\n\r\n  logoutRequest: null,\r\n  logoutSuccess: null,\r\n  logoutFailure: ['error'],\r\n\r\n  checkTokenRequest: ['payload'],\r\n  checkTokenSuccess: ['payload'],\r\n  checkTokenFail: ['error'],\r\n\r\n  resetAuthErrors: null,\r\n\r\n  restorePasswordRequest: ['data'],\r\n  restorePasswordSuccess: null,\r\n  restorePasswordFailure: ['error'],\r\n\r\n  toggleModal: ['isAuthModalOpen'],\r\n  \r\n  checkAuthRequest: ['payload'],\r\n  checkAuthSuccess: ['payload'],\r\n  checkAuthFail: null,\r\n\r\n  setShopToSee: ['shop'],\r\n})\r\n\r\nexport const AuthTypes = Types\r\nexport default Creators\r\n\r\n/* ------------- Initial State ------------- */\r\n\r\nexport const INITIAL_STATE = Immutable({\r\n  fetching: false,\r\n  user: null,\r\n  error: '',\r\n  isLoggedIn: false,\r\n  isLoggingIn: false,\r\n  shopToSee: {},\r\n})\r\n\r\n/* ------------- Selectors ------------- */\r\n\r\nexport const AuthSelectors = {\r\n  getUser: state => state.user\r\n}\r\n\r\n/* ------------- Reducers ------------- */\r\n\r\n// shop to see\r\nexport const setShopToSee = (state, { shop }) => {\r\n  return state.merge({ shopToSee: shop })\r\n}\r\n\r\n// login request\r\nexport const loginRequest = (state, { data }) => {\r\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false, shopToSee: {} })\r\n}\r\n  \r\n\r\n// login success\r\nexport const loginSuccess = (state, { user }) => {\r\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\r\n}\r\n\r\n// login fail\r\nexport const loginFailure = (state, action) => {\r\n  const { error } = action\r\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\r\n}\r\n\r\n// register request\r\nexport const signUpRequest = (state, { data }) =>\r\n  state.merge({ fetching: true, user: {}, isLoggingIn: true, isLoggedIn: false })\r\n\r\n// register success\r\nexport const signUpSuccess = (state, { user }) => {\r\n  return state.merge({ fetching: false, error: null, user: user, isLoggingIn: false, isLoggedIn: true  })\r\n}\r\n\r\n// register fail\r\nexport const signUpFailure = (state, { error }) => {\r\n  return state.merge({ fetching: false, error: error, user: null, isLoggingIn: false, isLoggedIn: false  })\r\n}\r\n\r\n// logout request\r\nexport const logoutRequest = (state) => {\r\n  return state.merge({ fetching: true, isLoggingIn: true })\r\n}\r\n  \r\n\r\n// logout success\r\nexport const logoutSuccess = (state) => {\r\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\r\n}\r\n\r\n// logout fail\r\nexport const logoutFailure = (state, { error }) => {\r\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\r\n}\r\n\r\nexport const resetAuthErrors = (state) => {\r\n  return state.merge({ fetching: false, error: null })\r\n}\r\n\r\n// auth modal toggle \r\n\r\nexport const toggleModal = (state, { isAuthModalOpen }) => {\r\n  return state.merge({ isAuthModalOpen, error: null })\r\n}\r\n  \r\nexport const checkTokenRequest = (state, { payload }) => {\r\n  return state.merge({ fetching: true })\r\n}\r\n\r\nexport const checkTokenSuccess = (state, { payload }) => {\r\n  return state.merge({ fetching: false, error: null, user: payload.user, isLoggedIn: true, isLoggingIn: false })\r\n}\r\n\r\nexport const checkTokenFail = (state, { error }) => {\r\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\r\n}\r\n\r\nexport const checkAuthSuccess = (state, { payload }) => {\r\n  return state.merge({ user: payload, isLoggedIn: true, isLogginIn: false })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  [Types.SET_SHOP_TO_SEE]: setShopToSee,\r\n\r\n  [Types.LOGIN_REQUEST]: loginRequest,\r\n  [Types.LOGIN_SUCCESS]: loginSuccess,\r\n  [Types.LOGIN_FAILURE]: loginFailure,\r\n  [Types.SIGNUP_REQUEST]: signUpRequest,\r\n  [Types.SIGNUP_SUCCESS]: signUpSuccess,\r\n  [Types.SIGNUP_FAILURE]: signUpFailure,\r\n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\r\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\r\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\r\n  [Types.LOGOUT_REQUEST]: logoutRequest,\r\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\r\n  [Types.LOGOUT_FAILURE]: logoutFailure,\r\n  [Types.TOGGLE_MODAL]: toggleModal,\r\n  [Types.RESET_AUTH_ERRORS]: resetAuthErrors,\r\n  [Types.CHECK_AUTH_SUCCESS]: checkAuthSuccess\r\n})\r\n","const localUrl = 'http://192.168.0.49:8000'\r\nconst prodUrl = 'http://77.222.54.204'\r\n\r\nexport const url = (process.env.REACT_APP_ENV === 'local' && localUrl) || (process.env.REACT_APP_ENV === 'prod' && prodUrl);\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n\r\n    //common_api\r\n    STOCK: `${apiUrl}/common/stock/`,\r\n    SHIFTS: `${apiUrl}/common/shifts/`,\r\n    SALES: `${apiUrl}/common/sales/`,\r\n    RESAWS: `${apiUrl}/common/resaw/`,\r\n    DAILY_REP: `${apiUrl}/common/daily_report/`,\r\n    SALE_CALC_DATA: `${apiUrl}/common/sales/calc_data/`,\r\n    INCOME_TIMBERS: `${apiUrl}/common/income_timbers/`,\r\n    QUOTAS: `${apiUrl}/common/quotas/`,\r\n\r\n    // ramshik api\r\n    // RAMSHIK_SHIFT_CREATE_DATA: `${apiUrl}/ramshik/shifts/create/init_data/`,\r\n    // RAMSHIK_SHIFT_CREATE: `${apiUrl}/ramshik/shifts/create/`,\r\n    RAMSHIK_SHIFT_LIST: `${apiUrl}/ramshik/shifts/list/`,\r\n    RAMSHIK_PAYOUTS: `${apiUrl}/ramshik/payouts/`,\r\n\r\n    // manager api\r\n    EMPLOYEE_PAYOUT_INIT_DATA: `${apiUrl}/manager/ramshik_payments/init_data/`,\r\n    EMPLOYEE_PAYOUT: `${apiUrl}/manager/ramshik_payments/ramshik_payout/`,\r\n    EMPLOYEE_CREATE: `${apiUrl}/manager/ramshiki/create/`,\r\n    manager_ramshiki_delete: (id) => `${apiUrl}/manager/ramshiki/${id}/`,\r\n\r\n    MANAGER_SHIFT_LIST: `${apiUrl}/manager/shift_list/`,\r\n\r\n    MANAGER_STOCK: `${apiUrl}/manager/stock/`,\r\n    MANAGER_STOCK_SET_LUMBER_PRICE: `${apiUrl}/manager/stock/set_price/`,\r\n    \r\n    MANAGER_SALE_LIST: `${apiUrl}/manager/sale_list/`,\r\n    \r\n    MANAGER_RAWSTOCK_INCOME_INIT_DATA: `${apiUrl}/manager/rawstock/timber/create_income/init_data/`,\r\n    MANAGER_RAWSTOCK_INCOME_CREATE: `${apiUrl}/manager/rawstock/timber/create_income/`,\r\n    manager_rawstock_income_delete: (id) => `${apiUrl}/manager/rawstock/timber/income_timbers/${id}/`,\r\n\r\n    MANAGER_SHIFT_CREATE_DATA: `${apiUrl}/manager/shifts/create/init_data/`,\r\n    MANAGER_SHIFT_CREATE: `${apiUrl}/manager/shifts/create/`,\r\n    manager_shift_delete: (id) => `${apiUrl}/manager/shifts/${id}/`,\r\n\r\n    MANAGER_SALE_INIT_DATA: `${apiUrl}/manager/sales/create/init_data/`,\r\n    MANAGER_SALE_CREATE: `${apiUrl}/manager/sales/create/`,\r\n    manager_delete_sale: (id) => `${apiUrl}/manager/sales/${id}/`,\r\n\r\n    MANAGER_CASH_RECORDS_LIST: `${apiUrl}/manager/cash_records/list/`,\r\n    MANAGER_CASH_RECORDS_CREATE: `${apiUrl}/manager/cash_records/create_expense/`,\r\n    manager_delete_expense: (id) => `${apiUrl}/manager/cash_records/${id}/`,\r\n\r\n    MANAGER_RESAW_CREATE: `${apiUrl}/manager/resaws/create/`,\r\n    manager_delete_resaw: (id) => `${apiUrl}/manager/resaws/${id}/`,\r\n\r\n    CAPO_BOSS_PAYOUT_MANAGER_CREATE: `${apiUrl}/boss_capo/cash_records/payout_to_manager/`,\r\n    boss_delete_manager_payout: (id) => `${apiUrl}/boss_capo/cash_records/${id}/`,\r\n}","// @flow\r\n\r\nimport axios from 'axios';\r\nimport endpoints from './endpoints';\r\n\r\n\r\nconst create = () => {\r\n  const logIn = (data: { username: string, password: string}): void => {\r\n    const { username, password } = data;\r\n    \r\n     return axios.post(endpoints.JWT_AUTH, { username, password })\r\n      .then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw new Error(response);\r\n        }\r\n        return { token: response.data.token, user: response.data.user };\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\r\n      })\r\n      .then((response) => {\r\n          localStorage.setItem('token', response.token);\r\n          return response.user;\r\n      })\r\n  }\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  const checkToken = (payload: string) => {\r\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\r\n      .then(response => {\r\n        return { user: response.data.user }\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\r\n      })\r\n  }\r\n\r\n  const signUp = (payload: { email: string, phone: string}) => {\r\n    const { email, phone } = payload;\r\n    return axios.post(endpoints.SIGNUP, { email, phone })\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]])\r\n      })\r\n  }\r\n\r\n  const checkAuth = (payload: string ) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('Нет доступа')\r\n    }\r\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token })\r\n      .then(({ data }) => {\r\n        const { user } = data;\r\n        const { group } = user;\r\n\r\n        // TODO - in response group is number (id), must be a string\r\n        if (payload.indexOf(group) === -1) {\r\n          throw new Error('Нет доступа')\r\n        }\r\n        return user\r\n      })\r\n      .catch(err => {\r\n        throw new Error(err.message)\r\n      })\r\n  }\r\n\r\n  return {\r\n    logIn,\r\n    checkToken,\r\n    logOut,\r\n    signUp,\r\n    checkAuth\r\n  }\r\n}\r\n\r\nexport default {\r\n  create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * signUp (api, action) {\r\n  const { data } = action\r\n  try {\r\n    let response = yield call(api.signUp, data);\r\n    yield put(AuthActions.signupSuccess(response));\r\n    // yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(AuthActions.signupFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* checkAuth(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    const response = yield call(api.checkAuth, payload);\r\n    yield put(AuthActions.checkAuthSuccess(response));\r\n  } catch (e) {\r\n    // yield put(push('/'));\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n    yield put(AuthActions.checkAuthFail(e.message))\r\n  }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, partialUpdateUser } from \"./authSagas\";\r\n// import * as feedbacksSaga from './feedbacksSagas';\r\n\r\nconst authApi = AuthApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  \r\n  form: formReducer,\r\n})\r\n\r\nexport default (history) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth={true}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    multiline={multiline}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nexport function LoginForm (props) {\r\n  const { parentSubmit, pristine, reset, submitting, handleSubmit, eventFetching, eventError, message }\r\n     = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit(parentSubmit)} className='' > \r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Логин\" \r\n            name='username'\r\n            margin='dense'\r\n          />\r\n\r\n          <Field \r\n            component={renderTextField}\r\n            label=\"Пароль\" \r\n            name='password'\r\n            margin='dense'\r\n            type='password'\r\n          />\r\n\r\n          <button \r\n            className='btn btn-m mt-2 font-900 shadow-s bg-highlight text-wrap'\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}>\r\n            Войти\r\n          </button>\r\n\r\n          {/* <ErrorOrMessage error={eventError} message={message} fetching={eventFetching}\r\n              className='mt-2 mb-0 mx-1 font-15' /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateLoginForm = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'username',\r\n    'password'\r\n  ]\r\n  \r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Обязательное поле'\r\n    }\r\n  })\r\n  return errors\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate: validateLoginForm,\r\n})(LoginForm)\r\n\r\n\r\nexport function DateFilter(props) {\r\n  const { startDate, endDate, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        label={'Дата с'}\r\n        type=\"date\"\r\n        name='startDate'\r\n        className='mr-2'\r\n        value={startDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <TextField\r\n        label={'Дата до'}\r\n        type=\"date\"\r\n        name='endDate'\r\n        className='mr-2'\r\n        value={endDate}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport function DayFilter(props) {\r\n  const { date, setData, showResults } = props\r\n  return (\r\n    <div className='d-flex justify-content-between'>\r\n      <TextField\r\n        type=\"date\"\r\n        name='date'\r\n        className='mr-2'\r\n        value={date}\r\n        onChange={setData}\r\n        InputLabelProps={{\r\n          className: '',\r\n          shrink: true \r\n        }}\r\n      />\r\n      <button className='btn btn-xs bg-highlight' onClick={showResults}>\r\n        показать\r\n      </button>\r\n    </div>\r\n  )\r\n} "," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\nimport { LoginForm } from '../components/CommonForms';\r\n\r\n\r\nexport function MenuItem (props) {\r\n  let history = useHistory()\r\n\r\n  function handleClick() {\r\n    history.push(props.to);\r\n  }\r\n  return (\r\n    <div \r\n      className='card-style mx-5 my-3 pt-2'\r\n      onClick={handleClick}\r\n      style={{\r\n        'background': 'white',\r\n        'width': '300px',\r\n        'color': 'white',\r\n        'font-weight': 'bold',\r\n        'font-size': '1em',\r\n        'text-align': 'center',\r\n        'word-break': 'break-word',\r\n        'border-radius': '15px',\r\n        'line-height': '12px',\r\n      }}\r\n    >\r\n      <h5>{props.title}</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ShopMenu (props) {\r\n  const { user } = props\r\n  props.setShopToSee(user.can_see_shop_stock)\r\n\r\n  return (\r\n    <div className=' '>\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Склад</h3>\r\n        <MenuItem title={'Склад. Текущие остатки'} to={'/manager/stock/'}/>\r\n      </div>\r\n\r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Приход пиломатериалов</h3>\r\n          <MenuItem title={'Приход список'} to={'/manager/shift_list/'}/>\r\n          <MenuItem title={'Создать приход'} to={'/manager/shift/create_shift/'}/>\r\n      </div>     \r\n\r\n      {/* {user.is_manager &&\r\n        <div className='my-4'>\r\n          <MenuItem title={'Перепил'} to={'/manager/resaws/create/'}/>\r\n        </div>\r\n      } */}\r\n     \r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Продажи</h3>\r\n        <MenuItem title={'Создать продажу'} to={'/manager/sales/create_sale/'}/>\r\n        <MenuItem title={'Продажи список'} to={'/manager/sale_list/'}/>\r\n      </div>\r\n      \r\n      <div className='my-4'>\r\n        <h3 className='text-center'>Отчеты и расходы</h3>\r\n        <MenuItem title={'Расходы'} to={'/manager/expenses/'}/>\r\n        <MenuItem title={'Расчет поставщиков'} to={'/manager/ramshik_payments/'}/>\r\n        <MenuItem title={'Итоги за день'} to={'/manager/daily_report/'}/>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    this.props.login(this.props.form.values)\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, shopToSee } = this.props.state.auth\r\n    console.log(this.props.state.auth)\r\n    return (\r\n      fetching \r\n        ? <CircularProgress />\r\n        : isLoggedIn \r\n            ? <ShopMenu user={user} shopToSee={shopToSee} setShopToSee={this.props.setShopToSee}/>\r\n            : <LoginForm parentSubmit={this.login} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  routing: state.routing,\r\n  state: state,\r\n  form: state.form.loginForm\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (payload) => dispatch(AuthActions.loginRequest(payload)),\r\n  logout: (payload) => dispatch(AuthActions.logoutRequest(payload)),\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  setShopToSee: (shop) => dispatch(AuthActions.setShopToSee(shop))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction HeaderComp (props) {\r\n  const histoty = useHistory()\r\n\r\n  function handleClickLogout () {\r\n    props.logout()\r\n    histoty.push('/')\r\n  }\r\n\r\n  function handleClickMenu () {\r\n    histoty.push('/')\r\n  }\r\n\r\n  function toMain () {\r\n    props.setShopToSee({})\r\n    histoty.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between px-3 py-2'>\r\n      <h4 className='text-center pt-2 w-100 pl-4' onClick={handleClickMenu}>{props.shopToSee.name}</h4>\r\n      <button className='btn btn-xs bg-red1-light' style={{lineHeight: '13px'}} onClick={handleClickLogout}>\r\n        <span className='py-0 my-0'>\r\n          <span className='d-block'>{props.user.nickname}</span>\r\n          выйти\r\n        </span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, fetching, user, shopToSee } = this.props.auth\r\n\r\n    return (\r\n      user\r\n      ? <div className='header' >\r\n          <HeaderComp logout={this.props.logout} user={user} shopToSee={shopToSee} \r\n            setShopToSee={this.props.setShopToSee}/>\r\n        </div>\r\n      : 'net login'\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  auth: state.auth,\r\n  routing: state.routing,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n  setShopToSee: (shop) => dispatch(AuthActions.setShopToSee(shop))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","\r\n// standart serializer field error. There are could be several fields\r\n// {\r\n//     \"birth_id\": [\"This field is required.\"]\r\n// }\r\n\r\n\r\nexport const parseErrorData = (error) => {\r\n\r\n    if (error && typeof error.response !== 'undefined') {\r\n        let errorObj = {\r\n            status: error.response.status, \r\n            statusText: error.response.statusText,\r\n            message: null,\r\n            response: error.response,\r\n        }\r\n        if ('message' in error.response.data) {\r\n            errorObj.message = JSON.stringify(error.response.data.message)\r\n        }\r\n        else {\r\n            let message = ''\r\n            for (const property in error.response.data) {\r\n                message = message + `${property}: ${error.response.data[property]}. `\r\n              }\r\n            errorObj.message = message\r\n\r\n        }\r\n        return errorObj\r\n\r\n    } else {\r\n        return { \r\n         status: 'Connection Error',\r\n         statusText: 'An error occurred while sending your data!',\r\n         message: 'An error occurred while sending your data!' }\r\n    }\r\n}\r\n\r\nexport const createUrlParamsFromFilters = (filters) => {\r\n    const params = new URLSearchParams()\r\n\r\n    if (filters != null) Object.keys(filters).forEach(key => {\r\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \r\n                params.append(key, filters[key])\r\n            if (filters[key] !== null && filters[key] instanceof Array){\r\n                delete params[key]\r\n                filters[key].map(value => {\r\n                    if (value !== '')\r\n                        params.append(key, value)\r\n                    return null\r\n                })\r\n            }\r\n        })\r\n    return params\r\n}","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}\r\n\r\nexport function replaceItemInDictArrayById(list, item) {\r\n  const itemInList = getObjectbyId(list, item.id)\r\n  const index = list.indexOf(itemInList)\r\n  list = [\r\n    ...list.slice(0, index),\r\n    item,\r\n    ...list.slice(index + 1)\r\n  ]\r\n  return list\r\n}\r\n\r\nexport function getToday() {\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  return today\r\n}\r\n\r\nexport function jsDateTimeToStr (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  let hours = jsDate.getHours();\r\n  let minutes = jsDate.getMinutes() > 9 ? jsDate.getMinutes(): '0' + jsDate.getMinutes();\r\n  return yyyy + '-' + mm + '-' + dd + 'T' + hours + ':' + minutes\r\n  \r\n}\r\n\r\nexport function jsDateTimeToStrDate (jsDate) {\r\n  let dd = String(jsDate.getDate()).padStart(2, '0');\r\n  let mm = String(jsDate.getMonth() + 1).padStart(2, '0');\r\n  let yyyy = jsDate.getFullYear();\r\n  return yyyy + '-' + mm + '-' + dd \r\n  \r\n}","import React, { } from 'react';\r\n\r\n\r\nfunction ShiftLumberTr (props) {\r\n  const { record } = props\r\n  const measureClass = 'font-10'\r\n  return (\r\n    <tr>\r\n      <td style={{lineHeight: '15px'}}>\r\n        {record.wood_species === 'larch'  \r\n          ? <span className='d-block color-brown1-light'>листв</span>\r\n          : <span className='d-block color-green1-light'>сосна</span>\r\n        }\r\n        {record.lumber.includes('доска') \r\n          ? <span className='font-italic'>{record.lumber}</span>\r\n          : <span className=''>{record.lumber}</span>\r\n        }\r\n      </td>\r\n      <td>\r\n        {record.quantity}\r\n        <span className={measureClass}> шт</span>\r\n      </td>\r\n      <td>{record.volume}<span className={measureClass}> м3</span></td>\r\n      <td>{record.rate}<span className={measureClass}> р</span></td>\r\n      <td>{record.total_cash}<span className={measureClass}> р</span></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport function ShiftComponent (props) {\r\n  const { shift, user, deleteShift } = props\r\n  return (\r\n    <div className='card card-style'>\r\n      <div className='content mb-1'>\r\n        <div className='d-flex justify-content-between'>\r\n          <p className='color-black mb-0 font-16'>Дата: {shift.date} {shift.shift_type}</p>\r\n          <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n            onClick={() => deleteShift(shift.id)}>\r\n              удалить\r\n          </button>\r\n        </div>\r\n        <p className='color-black mb-0 font-13 d-flex justify-content-between' style={{lineHeight: '15px'}}>\r\n          <span className='d-block mb-1'>Поставщик: <span className='d-block font-600 font-14'>{shift.employees[0]}</span></span>\r\n          <span className='d-block mb-1'>Объем: <span className='d-block font-600 font-14'>{shift.volume} m3</span></span>          \r\n          <span>Общая сумма: <span className='d-block font-600 font-14'>{shift.back_calc_cash} р</span></span>\r\n        </p>\r\n      </div>\r\n      <div className='content mt-0'>\r\n        <table className='table table-sm'>\r\n          <thead>\r\n            <th>Пиломат</th>\r\n            <th>кол-во</th>\r\n            <th>объем</th>\r\n            <th>цена</th>\r\n            <th>сумма</th>\r\n          </thead>\r\n          <tbody>\r\n            {shift.lumber_records.map(record => \r\n              <ShiftLumberTr record={record}/>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShiftList (props) {\r\n  const { shiftList, user, deleteShift } = props\r\n  return (\r\n    <div className='mt-2'>\r\n      <h4 className='my-3 text-center'>Смены  ({shiftList.length})</h4>\r\n      {shiftList.length > 0 && shiftList.map(shift => \r\n          <ShiftComponent shift={shift} user={user} deleteShift={deleteShift}/>\r\n      )}\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { ShiftList } from '../../components/Shifts';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class ManagerShiftList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shiftList: [],\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    yesterday.setDate(today. getDate() - 1);\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  setData = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults = () => {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SHIFTS,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, shiftList: response.data.results, });\r\n    })\r\n  }\r\n\r\n  deleteShift = (id) => {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_shift_delete(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ shiftList: response.data.shifts });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <ShiftList shiftList={this.state.shiftList} user={this.props.user} deleteShift={this.deleteShift}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerShiftList);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, getObjectbyId } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\n\r\nfunction TrRow (props) {\r\n  let { lumber, showNull, changeMarketCost, user } = props\r\n  let show = true\r\n  if (lumber.current_stock_quantity == 0 && !showNull) {\r\n    show = false\r\n  }\r\n  let wood_species = lumber.wood_species === 'pine' ? 'сосна' : 'лиственница'\r\n  let woodSpeciesClass = wood_species === 'сосна' ? 'color-green1-light' : 'color-brown1-light'\r\n  return (\r\n    show &&\r\n      <tr>\r\n        <td>\r\n          {lumber.name}\r\n          <span className={'d-block font-italic font-500 ' + woodSpeciesClass}>{wood_species}</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_volume.toFixed(4)}</span>\r\n          <span className='d-block'>м3</span>\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>{lumber.current_stock_quantity}</span>\r\n          шт\r\n        </td>\r\n        <td>\r\n          {user.is_manager &&\r\n            <TextField type='number' \r\n              className=''\r\n              value={lumber.shop_rate > 0 && lumber.shop_rate} \r\n              onChange={(e) => changeMarketCost(e, lumber.id)}/>\r\n          }\r\n          {user.is_kladman && <span className='font-16'>{lumber.shop_rate}</span>}\r\n        </td>\r\n        <td>\r\n          <span className='font-16'>\r\n            {lumber.stock_total_cash.toFixed(0)}</span>\r\n            р\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport class ManagerStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      showNull: false,\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n    this.changeMarketCost = this.changeMarketCost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.STOCK,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ lumbers: res.data.results });\r\n    })\r\n  }\r\n\r\n  changeMarketCost (e, lumberId) {\r\n    let { lumbers } = this.state\r\n    let lumber = getObjectbyId(lumbers, lumberId)\r\n   \r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_STOCK_SET_LUMBER_PRICE,\r\n      data: {\r\n        lumber: lumberId,\r\n        shop_rate: parseInt(e.target.value) || 0\r\n      },\r\n      headers: {'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      lumber = res.data;\r\n    })\r\n\r\n    lumber.shop_rate = parseInt(e.target.value) || 0\r\n    lumber.stock_total_cash = lumber.shop_rate * lumber.current_stock_volume\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, lumber)\r\n    this.setState({\r\n      lumbers: lumbers\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, showNull } = this.state\r\n    let totalVolume = 0\r\n    let totalCash = 0\r\n    lumbers.map(lumber => {\r\n      totalVolume += lumber.current_stock_volume\r\n      totalCash += lumber.stock_total_cash\r\n    })\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <div className='d-flex justify-content-between'>\r\n              <h4 className='mb-2'>Склад</h4>\r\n              <div className='my-0'>\r\n                <label>Показать нулевые значения</label>\r\n                <Switch\r\n                  checked={this.state.showNull}\r\n                  onChange={() => this.setState({showNull: !this.state.showNull})}\r\n                  name=\"showNull\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              {lumbers.length > 0 &&\r\n                <table className='table table-sm table-responsive' style={{lineHeight: '17px'}}>\r\n                  <thead>\r\n                    <th>пиломат</th>\r\n                    <th>объем</th>\r\n                    <th>кол-во</th>\r\n                    <th>цена за 1м3</th>\r\n                    <th>стоимоcть общая</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lumbers.map(lumber =>\r\n                      <TrRow lumber={lumber} showNull={showNull} changeMarketCost={this.changeMarketCost}\r\n                        user={this.props.user}/>\r\n                      )}\r\n                    <tr>\r\n                      <td><span className='font-16 font-500'>Итого</span></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalVolume.toFixed(3)}</span>\r\n                        <span className='d-block'>м3</span>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <span className='font-16 font-500'>{totalCash.toFixed(0)}</span>\r\n                        <span className='d-block'>рублей</span>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: dispatch,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerStock);","import React, { } from 'react';\r\n\r\nfunction FilteredLumberTr (props) {\r\n  const { lumber, calcType, calcRowAndTotal, key } = props\r\n  let tr = \r\n    <tr key={key}>\r\n      <td>\r\n        {lumber.name} \r\n        {lumber.wood_species === 'pine' \r\n          ? <span className='d-block color-brown1-light'>сосна</span> \r\n          : <span className='d-block color-green2-light'>лиственница</span>}\r\n      </td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n          name='quantity'\r\n          type='number' className='w-75' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n      </td>\r\n      <td>{lumber.volume_total > 0 && lumber.volume_total.toFixed(4) + ' м3'}</td>\r\n      <td className='w-25'>\r\n        <input style={{'color': '#6c6c6c'}}\r\n          name='rate'\r\n          type='number' className='w-100' onChange={(e) => calcRowAndTotal(e, lumber)} \r\n          value={lumber.employee_rate > 0 && lumber.employee_rate}/>\r\n      </td>\r\n      <td>{lumber.cash > 0 && lumber.cash.toFixed(0) + ' руб'}</td>\r\n    </tr>\r\n  \r\n  if (calcType === 'mixed' ) {\r\n    if ((lumber.lumber_type !== 'doska' & lumber.wood_species === 'larch') | ( lumber.wood_species === 'pine'))\r\n      return tr\r\n    }\r\n  \r\n  if (calcType === 'sorted' ) {\r\n      return tr\r\n    }\r\n  return null\r\n}\r\n\r\nexport function LumberTableMixed (props) {\r\n  const { lumbers, calcRowAndTotal, totalVolume, totalCash, calcType } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive text-center' \r\n      style={{'lineHeight': '17px', 'color': '#6c6c6c'}}>\r\n      <thead>\r\n        <th>Изделие</th>\r\n        <th>Кол-во</th>\r\n        <th>Обьем</th>\r\n        <th>Цена</th>\r\n        <th>Сумма</th>\r\n      </thead>\r\n      <tbody>\r\n      {lumbers.map((lumber, key) => \r\n        <FilteredLumberTr lumber={lumber} calcType={calcType} calcRowAndTotal={calcRowAndTotal} key={key}/>\r\n        )}\r\n        <tr>\r\n          <td>Итого</td>\r\n          <td className='w-25'>\r\n            -\r\n          </td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalVolume > 0 && totalVolume.toFixed(4) + ' м3'}\r\n            </span>\r\n          </td>\r\n          <td>-</td>\r\n          <td>\r\n            <span className='font-17 font-600'>\r\n              {totalCash > 0 && totalCash.toFixed(0) + ' руб'}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function LumberTable (props) {\r\n  const { lumbers } = props\r\n  return(\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за м3\r\n        </th>\r\n        <th>\r\n          сумма\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumbers.map(lumber_record =>\r\n        <tr>\r\n          <td>\r\n            {lumber_record.name ? lumber_record.name : lumber_record.lumber}\r\n          </td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>\r\n            {lumber_record.volume_total \r\n              ? lumber_record.volume_total.toFixed(4) + 'м3' : lumber_record.volume.toFixed(4) + 'м3'}\r\n          </td>\r\n          <td>{lumber_record.rate || lumber_record.employee_rate} руб</td>\r\n          <td>{(lumber_record.total_cash || lumber_record.cash).toFixed(0)} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function ShiftToSave (props) {\r\n  const { shift, saveData, back } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n      <h4>Проверяем данные</h4>\r\n      {shift &&\r\n        <div className=''>\r\n          <p className={rowClass}>\r\n            Объем общий: {shift.volume.toFixed(4)} м3</p>\r\n          <p className={rowClass}>\r\n            Общая сумма: {shift.employee_cash.toFixed(1)} рублей</p>\r\n          <p className={rowClass}>Примечание: {shift.note}</p>\r\n\r\n          <LumberTable lumbers={shift.raw_records}/>\r\n        </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-m text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-m text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreatedShift (props) {\r\n  const { shift, message } = props\r\n  const rowClass = 'mb-0 font-15 font-500 color-black'\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className='content'>\r\n        <h4>Приход сохранен</h4>\r\n        {shift &&\r\n          <div className=''>\r\n            <p className={rowClass}>Дата: {shift.date}</p>\r\n            <p className={rowClass}>\r\n              Объем общий: {shift.volume.toFixed(2)}  ({shift.back_calc_volume.toFixed(2)}) м3</p>\r\n            <p className={rowClass}>\r\n              Общая сумма: {shift.employee_cash && shift.employee_cash.toFixed(1)} ({shift.back_calc_cash.toFixed(1)}) \r\n              рублей</p>\r\n            <p className={rowClass}>Примечание: {shift.note}</p>\r\n            <LumberTable lumbers={shift.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EmployeesBlock (props) {\r\n  const { totalCash, employees, activeEmployees, addEmployee } = props\r\n  const empClass = ' rounded-xs px-2 py-2 '\r\n  return (\r\n    <div className='content'>\r\n      <h4>Кто поставщик? {activeEmployees.length > 0 && '(' + activeEmployees.length + ')'}</h4>\r\n      <div className='d-flex justify-content-between my-2 flex-wrap'>\r\n        {employees.map(emp => \r\n          <div \r\n            className={activeEmployees.includes(emp) \r\n              ? 'bg-green2-light mx-1 my-1' + empClass : 'bg-dark1-dark mx-1 my-1' + empClass }\r\n             onClick={() => addEmployee(emp)}>\r\n            {emp.nickname}\r\n          </div>\r\n          )}\r\n      </div>\r\n      {activeEmployees.length > 0 && \r\n        <div>\r\n          <div className='d-flex justify-content-start'>\r\n            {activeEmployees.map(aEmp => \r\n              <div className='mx-2'>\r\n                <span className='d-block font-16'>{aEmp.nickname}</span>\r\n                {totalCash > 0 && \r\n                  <span className='font-17 font-600'> {(totalCash / activeEmployees.length).toFixed(0)} руб</span>\r\n                }\r\n              </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { replaceItemInDictArrayById, lodashToggle, toggleArrayDictById } from '../../components/utils';\r\nimport { ShiftToSave, CreatedShift, LumberTableMixed, EmployeesBlock } from '../../components/ShiftCreateComponent';\r\n\r\n\r\nexport class ShiftCreateComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lumbers: [],\r\n      initLumbers: [],\r\n      totalVolume: 0,\r\n      totaCash: 0,\r\n\r\n      createdShift: null,\r\n\r\n      employees: [],\r\n      activeEmployees: [],\r\n\r\n      dataToSave: null,\r\n\r\n      calcType: 'mixed',\r\n\r\n      message: null,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.MANAGER_SHIFT_CREATE_DATA,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    ).then(res => {\r\n        const initData = res.data;\r\n        this.setState({ lumbers: initData.lumbers, initLumbers: initData.lumbers, \r\n          employees: initData.employees });\r\n      })\r\n  }\r\n\r\n  calcRowQuantity = (lumber, qnty) => {\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: qnty,\r\n      volume_total: qnty * lumber.volume,\r\n      cash: qnty * lumber.volume * lumber.employee_rate,\r\n      employee_rate: lumber.employee_rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcRowRate = (lumber, rate) => {\r\n    let calcLumber = {\r\n      ...lumber,\r\n      lumber: lumber.id,\r\n      quantity: lumber.quantity,\r\n      volume_total: lumber.quantity * lumber.volume,\r\n      cash: lumber.quantity * lumber.volume * rate,\r\n      employee_rate: rate\r\n    }\r\n    return calcLumber\r\n  }\r\n\r\n  calcTotalVolume = (lumbers) => {\r\n    let totalVolumeVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalVolumeVar = totalVolumeVar + lumber.volume_total\r\n    })\r\n\r\n    return totalVolumeVar\r\n  }\r\n\r\n  calcTotalCash = (lumbers) => {\r\n    let totalCashVar = 0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCashVar = totalCashVar + lumber.cash\r\n    })\r\n\r\n    return totalCashVar\r\n  }\r\n\r\n  calcRowAndTotal = (e, lumber) => {\r\n    let { lumbers } = this.state\r\n    let calcLumber\r\n    if (e.target.name === 'quantity') {\r\n      calcLumber = this.calcRowQuantity(lumber, e.target.value)\r\n    }\r\n    if (e.target.name === 'rate') {\r\n      calcLumber = this.calcRowRate(lumber, e.target.value)\r\n    }\r\n\r\n    lumbers = replaceItemInDictArrayById(lumbers, calcLumber)\r\n\r\n    let totalVolume = this.calcTotalVolume(lumbers)\r\n\r\n    let totalCash = this.calcTotalCash(lumbers)\r\n    \r\n    this.setState({ \r\n        ...this.state,\r\n        lumbers: lumbers,\r\n        totalVolume: totalVolume,\r\n        totalCash: totalCash,\r\n        message: null\r\n        })\r\n  }\r\n\r\n  addEmployee = (employee) => {\r\n    let { activeEmployees } = this.state\r\n    activeEmployees = toggleArrayDictById(activeEmployees, employee)\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: activeEmployees\r\n    })\r\n  }\r\n\r\n  preSave = () => {\r\n    const { lumbers, totalCash, totalVolume, activeEmployees  } = this.state\r\n\r\n    let eIds = []\r\n    activeEmployees.map(emp => eIds = lodashToggle(eIds, emp.id))\r\n\r\n    let raw_records = []\r\n    lumbers.map(lumber =>{\r\n      if (lumber.cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n    let data = {\r\n      shift_type: 'day',\r\n      date: null,\r\n      raw_records: raw_records,\r\n      employees: eIds,\r\n      employee_cash: totalCash,\r\n      volume: totalVolume,\r\n      employeesData: activeEmployees,\r\n      cash_per_employee: totalCash / eIds.length\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData = () => {\r\n    const { dataToSave} = this.state\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SHIFT_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: 'Данные записаны.', createdShift: response.data });\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      activeEmployees: [],\r\n      lumbers: this.state.initLumbers,\r\n      totalVolume: 0,\r\n      totalCash: 0,\r\n      note: '',\r\n      dataToSave: null,\r\n    })\r\n  }\r\n\r\n  back = () => {\r\n    this.setState({dataToSave: null})\r\n  }\r\n\r\n  switchCalc = (calcType) => {\r\n    this.setState({\r\n      lumbers: this.state.initLumbers,\r\n      totalCash: 0,\r\n      totalVolume: 0,\r\n      calcType: calcType,\r\n      activeEmployees: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { lumbers, totalVolume, totalCash, message, createdShift, dataToSave, calcType, \r\n      activeEmployees, employees}  = this.state\r\n    return (\r\n      <div>\r\n        {createdShift\r\n          ? <CreatedShift shift={createdShift} message={message}/>\r\n          : dataToSave\r\n            ? <ShiftToSave shift={dataToSave} saveData={this.saveData} back={this.back}/>\r\n            : <div>\r\n                <div className='card card-style mb-1 mt-2'>\r\n                  <div className='content'>\r\n                  <h2>Смена </h2>\r\n                    <div className='d-flex justify-content-between my-2'>\r\n                      <button className={calcType === 'mixed' ? 'btn btn-s bg-highlight' : 'btn btn-s border'}\r\n                        onClick={() => this.switchCalc('mixed')}\r\n                        >доска перемешку</button>\r\n                      <button className={calcType === 'sorted' ? 'btn btn-s bg-highlight' : 'btn btn-s border'} \r\n                        onClick={() => this.switchCalc('sorted')}>\r\n                        доска по сортам</button>\r\n                    </div>\r\n                    {lumbers.length > 0 &&\r\n                      <LumberTableMixed\r\n                        calcType={this.state.calcType}\r\n                        lumbers={lumbers}\r\n                        calcRowAndTotal={this.calcRowAndTotal}\r\n\r\n                        totalCash={totalCash}\r\n                        totalVolume={totalVolume}\r\n                      />\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='card card-style mb-3'>\r\n                  <EmployeesBlock \r\n                    totalCash={totalCash} \r\n                    employees={employees} \r\n                    activeEmployees={activeEmployees} \r\n                    addEmployee={this.addEmployee}/>\r\n\r\n                </div>\r\n                {(activeEmployees.length > 0 && totalCash > 0) > 0 &&\r\n                  <button   \r\n                      onClick={this.preSave}\r\n                      className='mt-4 btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm shadow-l'>\r\n                      Далее\r\n                    </button>\r\n                }\r\n              </div>          \r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({  \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShiftCreateComponent);","import React, { useState, useRef  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { getObjectbyId } from './utils';\r\n\r\n\r\nfunction LumberInputs (props) {\r\n  const { lumber, calcRowQnty, calcRowVolume, calcRowCash, setRamaPrice, label } = props\r\n  return (\r\n    <div className=''>\r\n      <h5>{label}:</h5>\r\n      <div className='d-flex justify-content-start '>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          label='Количество'\r\n          type='number'\r\n          onChange={(e) => calcRowQnty(e, lumber.id)}\r\n          value={lumber.quantity > 0 && lumber.quantity}/>\r\n\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Объем'\r\n          type='number'\r\n          onChange={(e) => calcRowVolume(e, lumber.id)}\r\n          value={lumber.volume_total > 0 && lumber.volume_total}/>\r\n      </div>\r\n      <div className='d-flex justify-content-start mt-2'>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          label='Цена за 1м3'\r\n          type='number'\r\n          onChange={(e) => calcRowCash(e, lumber.id)}\r\n          value={lumber.selling_price > 0 && lumber.selling_price}/>\r\n        <TextField \r\n          className='pr-2'\r\n          id=\"outlined-margin-dense\"\r\n          variant=\"outlined\" \r\n          disabled\r\n          label='Сумма'\r\n          type='number'\r\n          value={lumber.selling_total_cash > 0 && lumber.selling_total_cash}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function LumberOptGroup (props) {\r\n  const { woodSpecie, lumberType, pineBrus, pineDoska, larchBrus, larchDoska } = props\r\n  let lumberOptions = []\r\n  if (woodSpecie === 'pine' && lumberType === 'brus') lumberOptions = pineBrus\r\n  if (woodSpecie === 'pine' && lumberType === 'doska') lumberOptions = pineDoska\r\n  if (woodSpecie === 'larch' && lumberType === 'brus') lumberOptions = larchBrus\r\n  if (woodSpecie === 'larch' && lumberType === 'doska') lumberOptions = larchDoska\r\n  \r\n  return (\r\n    <optgroup label>\r\n      {lumberOptions.map(lumber =>\r\n        <option value={lumber.id} >{`${lumber.name} ${lumber.wood_species}`} </option>\r\n        )}\r\n    </optgroup>\r\n  )\r\n}\r\n\r\n\r\nexport function LumbersToSale (props) {\r\n  const { lumber, setLumberID, calcRowQnty, calcRowCash, pineBrus,  pineDoska, turnCalc, delLumber, larchBrus,\r\n     calcRoundRowQnty, calcRowVolume, calcRoundRowVolume, calcChinaRowQnty, calcChinaRowVolume, setRamaPrice,\r\n     stockType, larchDoska } = props\r\n\r\n  const lumberRef = useRef(null);\r\n  const executeScroll = () => lumberRef.current.scrollIntoView()\r\n\r\n  const woodSpecies = [['pine', 'сосна'], ['larch', 'лиственница']]\r\n  const [currentWoodSpecies, setCurrentWoodSpecies] = useState('pine');\r\n\r\n  const lumberTypes = [['brus', 'брус'], ['doska', 'доска']]\r\n  const [currentLumberType, setCurrentLumberType] = useState('brus');\r\n\r\n  const filterBtnClass = 'btn btn-m border w-100 mx-2'\r\n\r\n  return (\r\n    <div className='mt-2 mb-3 px-2 py-3 bg-white rounded-m border' ref={lumberRef}>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='text-center font-19 font-600 color-black'>\r\n        Пиломатериал {lumber.id + 1}\r\n      </InputLabel>\r\n\r\n      <div className='d-flex justify-content-around my-2'>\r\n        {woodSpecies.map(woodSpecie =>\r\n          <button className={woodSpecie[0] === currentWoodSpecies ? filterBtnClass + ' bg-green2-light' \r\n            : filterBtnClass} \r\n            onClick={() => setCurrentWoodSpecies(woodSpecie[0])}>\r\n            {woodSpecie[1]}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className='d-flex justify-content-around mb-2'>\r\n        {lumberTypes.map(lumberType =>\r\n          <button className={lumberType[0] === currentLumberType ? filterBtnClass + ' bg-yellow1-light' \r\n            : filterBtnClass} \r\n            onClick={() => setCurrentLumberType(lumberType[0])}>\r\n            {lumberType[1]}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber.lumber} onChange={(e) =>setLumberID(e, lumber.id)}\r\n        name='lumber'\r\n        data-id={lumber.id}\r\n        onClick={executeScroll}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <LumberOptGroup woodSpecie={currentWoodSpecies} lumberType={currentLumberType}\r\n          pineBrus={pineBrus} pineDoska={pineDoska} larchBrus={larchBrus} larchDoska={larchDoska} />\r\n      </Select>\r\n\r\n      {lumber.lumber > 0 && \r\n        <div className='mt-2'>\r\n          <div className='d-flex justify-content-around'>\r\n            <button className={lumber.calc_type === 'exact' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'} \r\n              onClick={() => turnCalc(lumber.id, 'exact')}>\r\n              счет Т\r\n            </button>\r\n            <button className={lumber.calc_type === 'round' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'round')}>\r\n              счет О\r\n            </button>\r\n            {lumber.china_volume > 0 &&\r\n              <button className={lumber.calc_type === 'china' ? 'btn btn-m bg-blue1-light' \r\n              : 'btn btn-m border'}\r\n              onClick={() => turnCalc(lumber.id, 'china')}>\r\n                Китайский счет\r\n            </button>\r\n            }\r\n          </div>\r\n          {lumber.calc_type === 'exact' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет Т'} \r\n              calcRowQnty={calcRowQnty} \r\n              calcRowVolume={calcRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />\r\n          }\r\n          {lumber.calc_type === 'round' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Счет О'} \r\n              calcRowQnty={calcRoundRowQnty} \r\n              calcRowVolume={calcRoundRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n          {lumber.calc_type === 'china' &&\r\n            <LumberInputs \r\n              lumber={lumber}\r\n              label={'Китайский счет'} \r\n              calcRowQnty={calcChinaRowQnty} \r\n              calcRowVolume={calcChinaRowVolume}\r\n              calcRowCash={calcRowCash}\r\n              setRamaPrice={setRamaPrice}\r\n            />            \r\n          }\r\n        </div>}\r\n      {lumber.lumber > 0 && \r\n        <button className='btn btn-sm bg-red2-light mt-2 ' onClick={() => delLumber(lumber.id)}>удалить</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCheckList (props) {\r\n  const { setAddParams, seller, sellers, client, delivery_fee, preSave } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n          className='pr-2 pt-2'\r\n          variant=\"standard\" \r\n          label='Имя клиента'\r\n          type='text'\r\n          name='client'\r\n          onChange={setAddParams}\r\n          value={client && client}/>\r\n        <FormControl  className='pb-4'>\r\n          <InputLabel >Продавец</InputLabel>\r\n          <Select \r\n            native \r\n            defaultValue=\"\" \r\n            className='color-dark1-light'\r\n            value={seller} \r\n            onChange={setAddParams}\r\n            name='seller'\r\n            >\r\n            <option aria-label=\"None\" />\r\n            {sellers && sellers.length > 0 && sellers.map(s => \r\n              <option value={s.id} >{s.nickname} </option>\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className='d-flex justify-content-between mb-1 '>\r\n        <TextField \r\n            className='pr-2'\r\n            id=\"outlined-margin-dense\"\r\n            variant=\"outlined\" \r\n            label='Доставка'\r\n            type='number'\r\n            name='delivery_fee'\r\n            onChange={setAddParams}\r\n            value={delivery_fee > 0 && delivery_fee}/>\r\n      </div>\r\n      <button\r\n        onClick={preSave}\r\n        className='btn btn-center-xl btn-xxl text-uppercase font-900 bg-highlight rounded-sm \r\n          shadow-l mt-4'>\r\n        Далее\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LumbersTable (props) {\r\n  const { lumber_records } = props\r\n  return (\r\n    <table className='table table-sm table-responsive mt-2'>\r\n      <thead>\r\n        <th>\r\n          Пиломат\r\n        </th>\r\n        <th>\r\n          кол-во\r\n        </th>\r\n        <th>\r\n          объем\r\n        </th>\r\n        <th>\r\n          цена за 1м3\r\n        </th>\r\n        <th>\r\n          сумма продажи\r\n        </th>\r\n      </thead>\r\n      <tbody>\r\n        {lumber_records.map(lumber_record =>\r\n        <tr>\r\n          <td>{lumber_record.name}</td>\r\n          <td>{lumber_record.quantity} шт</td>\r\n          <td>{lumber_record.volume_total} м3</td>\r\n          <td>{lumber_record.selling_price} руб</td>\r\n          <td>{lumber_record.selling_total_cash} руб</td>\r\n        </tr>\r\n          )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport function CreatedSale (props) {\r\n  const { sale, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {sale &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {sale.date}</p>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Вознаграждение продавца: {sale.seller_fee} рублей</p>\r\n            {/* <p className={rowClass}>Вознаграждение грузчика: {sale.loader_fee} рублей</p> */}\r\n            <p className={rowClass}>Стоимость доставки: {sale.delivery_fee} рублей</p>\r\n\r\n            <p className='mb-1 font-17 font-500 color-black'>\r\n              Сумма продажи: {sale.selling_total_cash.toFixed(1)}  рублей\r\n            </p>\r\n\r\n            <LumbersTable lumber_records={sale.lumber_records}/>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function SaleCommonToCreate (props) {\r\n  const { sale, saveData, back, sellers } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  let seller = null\r\n  if (sellers)\r\n    seller = getObjectbyId(sellers, sale.seller)\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {sale &&\r\n          <div className=''>\r\n            <p className={rowClass}>Клиент: {sale.client}</p>\r\n            <p className={rowClass}>Объем: {sale.volume.toFixed(4)} м3</p>\r\n            <p className={rowClass}>Грузчик: {sale.loader ? 'да' : \"нет\"} </p>\r\n            {/* <p className={rowClass}>Бонус складу: {sale.bonus_kladman ? 'да' : 'нет'}</p> */}\r\n            <p className={rowClass}>Продавец: {seller ? seller.nickname : 'нет'}</p>\r\n            <p className={rowClass}>Доставка: {sale.deliveryFee ? sale.deliveryFee + 'рублей' : 'нет'}</p>\r\n            <p className='mb-1 font-17 font-500 color-black'>Сумма: {sale.sale_cash.toFixed(1)} рублей</p>\r\n            <LumbersTable lumber_records={sale.raw_records}/>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Рассчитать и сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { replaceItemInDictArrayById, getObjectbyId, toggleArrayDictById, lodashToggle } \r\n  from '../../components/utils';\r\n\r\nimport { LumbersToSale, SaleCheckList, SaleCommonToCreate, CreatedSale } \r\n  from '../../components/SaleCommon';\r\n\r\n\r\nexport class SaleCreateCommonContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      lumbers: [],\r\n\r\n      sellers: [],\r\n      seller: null,\r\n      bonus_kladman: null,\r\n      bonus_kladman_label: false,\r\n      loader: false,\r\n      client: '',\r\n      china_vira: 0,\r\n      delivery_fee: 0,\r\n\r\n      lumbersToSale: [],\r\n\r\n      createdSale: null,\r\n      dataToSave: null,\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      totalCash: 0,\r\n      totalVolume: 0\r\n      \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({stock_type: this.props.user.shop_type});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        sellers: initData.sellers,\r\n        bonus_kladman: initData.kladman_id\r\n        });\r\n    })\r\n  }\r\n\r\n  addLumberToSale = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      lumbersToSale: [\r\n        ...this.state.lumbersToSale,\r\n        {id: this.state.lumbersToSale.length}\r\n      ]\r\n    })\r\n  }\r\n\r\n  setLumberID = (e, id) => {\r\n    let { lumbersToSale, lumbers } = this.state\r\n    let lumberData = getObjectbyId(lumbers, e.target.value)\r\n    lumberData = { ...lumberData, id: id, }\r\n    \r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumberData)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale\r\n    })\r\n  }\r\n\r\n  calcRowQnty = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowVolume = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.volume).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRowCash = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.selling_price =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowQnty = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.round_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcRoundRowVolume = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.round_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowQnty = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.quantity =  e.target.value ? parseInt(e.target.value) : 0\r\n    lumber.volume_total = (lumber.china_volume * lumber.quantity).toFixed(4)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcChinaRowVolume = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.volume_total =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumber.quantity = (lumber.volume_total / lumber.china_volume).toFixed(0)\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setShopPrice = (e, id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumber.shop_price =  e.target.value ? parseFloat(e.target.value) : 0\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    \r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n    })\r\n  }\r\n\r\n  turnCalc = (id, calcType) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n\r\n    if (calcType === 'round') {\r\n      lumber.volume_total = (lumber.quantity * lumber.round_volume).toFixed(3)\r\n    } \r\n\r\n    if (calcType === 'exact') {\r\n      lumber.volume_total = (lumber.quantity * lumber.volume).toFixed(4)\r\n    }\r\n\r\n    if (calcType === 'china') {\r\n      lumber.volume_total = (lumber.quantity * lumber.china_volume).toFixed(4)\r\n      lumber.selling_price = 0\r\n    }\r\n\r\n    lumber.calc_type = calcType\r\n    lumber.selling_total_cash = (lumber.volume_total * lumber.selling_price).toFixed(0)\r\n\r\n    lumbersToSale = replaceItemInDictArrayById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  calcTotal = (lumbers) => {\r\n    let totalCash = 0\r\n    let totalVolume = 0.0\r\n\r\n    lumbers.map(lumber => {\r\n      totalCash += parseInt(lumber.selling_total_cash)\r\n      totalVolume += parseFloat(lumber.volume_total)\r\n    })\r\n    return { totalCash: totalCash.toFixed(0), totalVolume: totalVolume.toFixed(4) }\r\n  }\r\n\r\n  delLumber = (id) => {\r\n    let { lumbersToSale } = this.state\r\n    let lumber = getObjectbyId(lumbersToSale, id)\r\n    lumbersToSale = toggleArrayDictById(lumbersToSale, lumber)\r\n    const { totalCash, totalVolume } = this.calcTotal(lumbersToSale)\r\n\r\n    this.setState({\r\n      lumbersToSale: lumbersToSale,\r\n      totalCash: totalCash,\r\n      totalVolume: totalVolume\r\n    })\r\n  }\r\n\r\n  setAddParams = (e) => {\r\n    if (e.target.name === 'loader' || e.target.name === 'bonus_kladman_label')\r\n      this.setState({[e.target.name]: !this.state[e.target.name]})\r\n    else\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  setChinaVira = (e) => {\r\n    let { lumbersToSale } = this.state\r\n    let { totalCash } = this.calcTotal(lumbersToSale)\r\n    let china_vira = parseInt(e.target.value)\r\n    if (china_vira > 0)\r\n      totalCash -= china_vira\r\n    \r\n    this.setState({\r\n      totalCash: totalCash,\r\n      china_vira: china_vira\r\n    })\r\n  }\r\n\r\n  preSave = () => {\r\n    const { lumbersToSale, loader, seller, bonus_kladman_label, bonus_kladman,\r\n      delivery_fee, totalCash, totalVolume, client, china_vira } = this.state\r\n    let raw_records = []\r\n    lumbersToSale.map(lumber =>{\r\n      if (lumber.selling_total_cash > 0 && lumber.quantity > 0) {\r\n        raw_records = lodashToggle(raw_records, lumber)\r\n      }\r\n    })\r\n\r\n    let data = {\r\n      raw_records: raw_records,\r\n      date: null,\r\n      loader: loader,\r\n      seller: seller,\r\n      bonus_kladman: bonus_kladman_label ? bonus_kladman : null,\r\n      client: client,\r\n      delivery_fee: delivery_fee,\r\n\r\n      sale_cash: parseFloat(totalCash),\r\n      volume: parseFloat(totalVolume),\r\n      china_vira: china_vira\r\n    }\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData = () => {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_SALE_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdSale: response.data.sale });\r\n    })\r\n  }\r\n\r\n  back = () => {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { lumbersToSale, totalVolume, totalCash, createdSale, dataToSave, message } = this.state\r\n    return (\r\n      <div className=''>\r\n        {createdSale \r\n          ? <CreatedSale sale={createdSale} message={message}/>\r\n          : dataToSave\r\n            ? <SaleCommonToCreate sale={dataToSave} saveData={this.saveData} back={this.back} \r\n              sellers={this.state.sellers}/>\r\n            : <div >\r\n                <div className='content'>\r\n                  <h3>Что продаем?</h3> \r\n                  {lumbersToSale.length > 0  && lumbersToSale.map(lumber => lumber &&\r\n                    <LumbersToSale\r\n                      stockType={this.props.user.shop_type}\r\n                      lumber={lumber} \r\n                      setLumberID={this.setLumberID} \r\n\r\n                      calcRowQnty={this.calcRowQnty}\r\n                      calcRowCash={this.calcRowCash}\r\n                      calcRowVolume={this.calcRowVolume}\r\n\r\n                      calcRoundRowQnty={this.calcRoundRowQnty}\r\n                      calcRoundRowVolume={this.calcRoundRowVolume}\r\n\r\n                      calcChinaRowQnty={this.calcChinaRowQnty}\r\n                      calcChinaRowVolume={this.calcChinaRowVolume}\r\n\r\n                      setShopPrice={this.setShopPrice}\r\n\r\n                      turnCalc={this.turnCalc}\r\n                      delLumber={this.delLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      larchBrus={this.state.larchBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchDoska={this.state.larchDoska}\r\n                    />\r\n                  )}\r\n                  <div className='d-flex justify-content-center'>\r\n                    <button className='mt-1 btn btn-l bg-highlight' onClick={this.addLumberToSale}>\r\n                      Добавить пиломатериал\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {totalCash > 0 &&\r\n                  <div className='card card-style mt-2'>\r\n                    <div className='content'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='font-15 mb-0'>Объем: {totalVolume} м3</p>\r\n                        <p className='font-15 mb-0'>Итого: {totalCash} р</p>\r\n                      </div>          \r\n                      <SaleCheckList \r\n                        setAddParams={this.setAddParams} \r\n                        sellers={this.state.sellers}\r\n                        seller={this.state.seller}\r\n                        bonus_kladman_label={this.state.bonus_kladman_label}\r\n                        loader={this.state.loader}\r\n                        client={this.state.client}\r\n                        delivery_fee={this.state.delivery_fee}\r\n\r\n                        china_vira={this.state.china_vira}\r\n                        setChinaVira={this.setChinaVira}\r\n\r\n                        preSave={this.preSave}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  }\r\n              </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleCreateCommonContainer);","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { jsDateTimeToStrDate } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\nimport { DateFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport function SalesTable (props) {\r\n  const { sales, totals, deleteSale, shop } = props\r\n\r\n  return (\r\n    <table className='table table-sm table-responsive'>\r\n      <thead>\r\n        <th>Дата/Клиент</th>\r\n        <th>Пиломат</th>\r\n        <th>Сумма/Объем</th>\r\n        <th style={{lineHeight: '13px'}}>\r\n        {shop.sale_type === 'seller_kladman_same' \r\n          ? 'Продавeц (комиссия кладмэна из вознаграждения продавца)'\r\n          : 'Продавeц'\r\n        }\r\n        </th>\r\n        {/* <th>грузчик</th>\r\n        <th>кладмэн</th> */}\r\n        <th>Доставка</th>\r\n        <th className='text-nowrap'>Удалить</th>\r\n      </thead>\r\n      <tbody>\r\n        {sales.map(sale => \r\n          <tr>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {sale.date}\r\n              <span className='d-block'>{sale.note}</span>\r\n              <span className='font-13'>{sale.sale_type}</span>\r\n            </td>\r\n            <td className='text-nowrap'>\r\n              {sale.lumber_records.map(lumber =>\r\n                <span className='d-block mb-2' style={{lineHeight: '14px'}}>\r\n                  {lumber.quantity}шт {lumber.lumber}\r\n                  <span className='d-block font-italic'>{lumber.wood_species}</span>\r\n                  <span className='d-block font-italic'>розница общ <span className='font-500'>\r\n                    {lumber.selling_total_cash}</span></span>\r\n                  <span className='d-block font-italic'>розница 1м3 <span className='font-500'>\r\n                    {lumber.selling_price}</span></span>\r\n                  <span className='d-block font-italic'>опт общ <span className='font-500'>\r\n                    {lumber.shop_total_cash}</span></span>\r\n                  <span className='d-block font-italic'>опт 1м3 <span className='font-500'>\r\n                    {lumber.shop_price}</span></span>\r\n                </span>\r\n                )}\r\n            </td>\r\n            <td >\r\n              <span>{sale.selling_total_cash}р</span>\r\n              <span className='d-block'>{sale.volume} м3</span>\r\n            </td>\r\n            <td style={{lineHeight: '15px'}}>\r\n              {shop.sale_type === 'seller_kladman_same' \r\n                ? <span className='d-block'>\r\n                    <span className='d-block'>{sale.seller_fee - sale.kladman_fee}</span>\r\n                    {`(${sale.seller_fee}  - ${sale.kladman_fee})`}\r\n                  </span>\r\n                : <span className='d-block'>{sale.seller_fee}</span>\r\n              }\r\n              {sale.seller_name && <span className=''>{sale.seller_name}</span>}\r\n            </td>\r\n            {/* <td>\r\n              {sale.loader_fee}\r\n            </td>\r\n            <td>\r\n              {sale.kladman_fee}\r\n            </td> */}\r\n            <td>\r\n              {sale.delivery_fee}\r\n            </td>\r\n            <td>\r\n              <button className='btn btn-xs bg-red1-light' value={sale.id} onClick={deleteSale}>Удалить</button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr className='font-500 font-16'>\r\n          <td>Итого</td>\r\n          <td>-</td>\r\n          <td>{totals.total_selling_cash}</td>\r\n          <td>\r\n            {shop.sale_type === 'seller_kladman_same' \r\n             ? <span>\r\n                  <span className='d-block'>{totals.total_seller_fee - totals.total_kladman_fee}</span>\r\n                  {`(${totals.total_seller_fee}  - ${totals.total_kladman_fee})`}\r\n               </span>\r\n             : totals.total_seller_fee\r\n            }\r\n          </td>\r\n\r\n          {/* <td>{totals.total_loader_fee}</td>\r\n          <td>{totals.total_kladman_fee}</td> */}\r\n          <td>{totals.total_delivery_fee}</td>\r\n          <td>{totals.total_add_expenses}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport class SaleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saleList: [],\r\n      totals: {},\r\n\r\n      startDate: '',\r\n      endDate: '',\r\n      \r\n      message: null,\r\n      error: null,\r\n    }\r\n\r\n    this.deleteSale = this.deleteSale.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.showResults = this.showResults.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    let today = new Date()\r\n    let yesterday = new Date()\r\n    let startDate = jsDateTimeToStrDate(yesterday)\r\n    let endDate = jsDateTimeToStrDate(today)\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id, \r\n      date_before: endDate, date_after:startDate});\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      params: params,\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals,\r\n        startDate: startDate, endDate: endDate });\r\n    })\r\n  }\r\n\r\n  deleteSale (e) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_sale(e.target.value),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults () {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id, \r\n      date_before: this.state.endDate, date_after: this.state.startDate});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.SALES,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, saleList: response.data.sales, totals: response.data.totals });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { saleList, totals } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mt-2'>\r\n          <div className='content'>\r\n            <DateFilter startDate={this.state.startDate} endDate={this.state.endDate} setData={this.setData}\r\n              showResults={this.showResults}/>\r\n          </div>\r\n        </div>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Продажи ({saleList.length})</h4>\r\n            {saleList.length > 0 \r\n              ? <SalesTable sales={saleList} totals={totals} deleteSale={this.deleteSale}\r\n                  shop={this.props.shopToSee} />\r\n              : <h5>Нет продаж</h5>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaleList);","import React, { } from 'react';\r\n\r\nexport function SalesList (props) {\r\n  const { sales, sales_totals, sellers_fee } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm' style={{lineHeight: '17px'}}>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Продавец</th>\r\n          {/* <th>Клад/груз</th> */}\r\n          <th>Доставка</th>\r\n        </thead>\r\n        <tbody>\r\n          {sales.length > 0 && sales.map(sale =>\r\n          <tr>\r\n            <td>\r\n              <span className='d-block'>{sale.client}</span>\r\n              <span>{sale.selling_total_cash}</span>\r\n            </td>\r\n            <td>\r\n              <span className='d-block'>{sale.seller_name}</span>\r\n              <span>{sale.seller_fee}</span>\r\n            </td>\r\n            {/* <td>\r\n              <span className='d-block'>К {sale.kladman_fee}</span>\r\n              <span>Г {sale.loader_fee}</span>\r\n            </td> */}\r\n            <td>\r\n              <span>{sale.delivery_fee}</span>\r\n            </td>\r\n          </tr>\r\n            )}\r\n          {sales_totals && \r\n            <tr>\r\n              <td className=''>\r\n                <span className='d-block font-15 '>Итого доход</span>\r\n                <span className='font-15 font-500 color-green2-light'>\r\n                  +{sales_totals.total_selling_cash} р\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {sellers_fee.length > 0 && sellers_fee.map(seller => seller.total > 0 &&\r\n                  <span className='d-block'>{seller.name} {seller.total}</span>\r\n                )}\r\n              </td>\r\n              {/* <td>\r\n                <span className='d-block'>К {sales_totals.total_kladman_fee}</span>\r\n                <span>Г {sales_totals.total_loader_fee}</span>\r\n              </td> */}\r\n              <td>\r\n                <span>{sales_totals.total_delivery_fee}</span>\r\n              </td>\r\n            </tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function CashRecordsList (props) {\r\n  const { records } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {records.length > 0 && records.map(record =>\r\n          <tr>\r\n            {record.record_type == 'withdraw_employee' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'shop_expenses' &&\r\n              <td className='text-nowrap color-red1-light'>\r\n                -{record.amount} р\r\n              </td>\r\n            }\r\n            {record.record_type == 'sale_income' &&\r\n              <td className='text-nowrap color-green1-light'>\r\n                +{record.amount} р\r\n              </td>\r\n            }\r\n            <td className='text-nowrap'>\r\n              {record.note}\r\n            </td>\r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { CashRecordsList, SalesList } from '../../components/DailyRep';\r\nimport { DayFilter } from '../../components/CommonForms';\r\n\r\n\r\nexport class DailyRepContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createdExpense: null,\r\n      expenses: [],\r\n\r\n      incomes: [],\r\n\r\n      sales: [],\r\n      sellers_fee: [],\r\n\r\n      allRecords: [],\r\n      total: null,\r\n      total_expenses: null,\r\n      total_incomes: null,\r\n\r\n      date: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({date: getToday(), shop: this.props.shopToSee.id});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee,\r\n        date: getToday()\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense = (expense) => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.KLADMAN_EXPENSE_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        allRecords: response.data.records, total: response.data.total, });\r\n    })\r\n  }\r\n\r\n  setData = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  showResults = () => {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({shop: this.props.shopToSee.id, date: this.state.date});\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.DAILY_REP,\r\n      headers: {'Authorization': `JWT ${token}` },\r\n      params: params\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.expense_records,\r\n        total_expenses: initData.expense_records_total,\r\n        incomes: initData.income_records,\r\n        total_incomes: initData.income_records_total,\r\n        allRecords: initData.records,\r\n        total: initData.records_total,\r\n        sales: initData.sales,\r\n        sales_totals: initData.sales_totals,\r\n        sellers_fee: initData.sales_sellers_fee\r\n        });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, total_expenses, sales, sales_totals } = this.state\r\n    return (\r\n      <div className='card card-style mt-2 mb-0'>\r\n        <div className='content mb-0 '>\r\n          <h3 className=''>Дневной отчет</h3>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <DayFilter date={this.state.date} setData={this.setData} showResults={this.showResults} />\r\n        </div>\r\n        <div className='content mb-0 mt-0'>\r\n          <h5 className=''>Продажи</h5>\r\n          <SalesList sales={sales} sales_totals={sales_totals} sellers_fee={this.state.sellers_fee}/>\r\n        </div>\r\n        <div className='content mt-0'>\r\n          <h5 className='mb-1'>Расходы за день</h5>\r\n          {total_expenses && \r\n            <p className='mb-1 font-15 color-black'>\r\n              Итого расход: \r\n              <span className='font-500 color-red1-light'> -{total_expenses}р</span>\r\n            </p> }\r\n          <CashRecordsList records={expenses}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyRepContainer);","import React, { Component, useState  } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport function ExpensesList (props) {\r\n  const { expenses, deleteExpense } = props\r\n\r\n  return (\r\n    <div>\r\n      <table className='table table-sm'>\r\n        <thead>\r\n          <th>Сумма</th>\r\n          <th>Примечание</th>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.length > 0 && expenses.map(expense =>\r\n          <tr>\r\n            <td>\r\n              {expense.amount} руб\r\n            </td>\r\n            <td>\r\n              {expense.note}\r\n            </td>\r\n            \r\n            <td>\r\n              <button className='btn btn-s bg-red1-light' onClick={() => deleteExpense(expense.id)}>\r\n                Удалить\r\n              </button>\r\n            </td>\r\n            \r\n          </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreateExpense (props) {\r\n  const [amount, setCount] = useState();\r\n  const [note, setNote] = useState('');\r\n\r\n  return (\r\n    <div className=''>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Сумма'\r\n          type='number'\r\n          onChange={(e) => setCount(e.target.value)}\r\n          value={amount}/>\r\n      <TextField \r\n          className='mb-2'\r\n          id=\"outlined-margin-dense\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          label='Примечание'\r\n          type='text'\r\n          onChange={(e) => setNote(e.target.value)}\r\n          value={note}/>\r\n      <button className='btn btn-m bg-highlight mt-2' \r\n        onClick={() => props.createExpense({amount: amount, note: note})}>\r\n        Записать\r\n      </button>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { getToday } from '../../components/utils';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport { ExpensesList, CreateExpense } from '../../components/Expenses';\r\n\r\n\r\nexport class ExpensesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createExpense: null,\r\n      expenses: [],\r\n      total: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const params = createUrlParamsFromFilters({created_at_after: getToday()});\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_CASH_RECORDS_LIST,\r\n      params: params,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        expenses: initData.records,\r\n        total: initData.total\r\n        });\r\n    })\r\n  }\r\n\r\n  createExpense = (expense) => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_CASH_RECORDS_CREATE,\r\n      data: expense,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdExpense: response.data.expense,\r\n        expenses: response.data.records, total: response.data.total });\r\n    })\r\n  }\r\n\r\n  deleteExpense = (id) => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_expense(id),\r\n      headers: {'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      this.setState({ ...this.state, \r\n        expenses: res.data.records,\r\n        total: res.data.totals,\r\n        amount: 0 });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { expenses, createdExpense, total } = this.state\r\n    return (\r\n      <div className='card card-style mt-2'>\r\n        <div className='content mb-0'>\r\n          <h3 className=''>Расходы</h3>\r\n        </div>\r\n        <div className='content mb-0'>\r\n          {createdExpense\r\n            ? <div>\r\n                <button className='btn btn-m bg-highlight' onClick={() => this.setState({createdExpense: null})}>\r\n                  Создать еще\r\n                </button>\r\n              </div>\r\n            : <CreateExpense createExpense={this.createExpense}/>\r\n          }\r\n        </div>\r\n        <div className='content'>\r\n          <h3 className='mb-1'>За день</h3>\r\n          {total && <h5 className='mb-1'>Итого: {total}р</h5> }\r\n          <ExpensesList expenses={expenses} user={this.props.user} deleteExpense={this.deleteExpense}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpensesContainer);","import React, { } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nimport { getObjectbyId } from './utils';\r\n\r\nexport function ResawInput (props) {\r\n  const { lumber, quantity, setLumber, pineBrus, pineDoska, larchBrus, larchDoska, label, lumber_input_label } = props\r\n  let lumber_input_quantity_label = lumber_input_label + \"_quantity\"\r\n\r\n  return (\r\n    <div className=''>\r\n      <InputLabel htmlFor=\"grouped-native-select\" className='font-19 font-600 color-black'>\r\n        {label}\r\n      </InputLabel>\r\n      <Select \r\n        native \r\n        defaultValue=\"\" \r\n        id=\"grouped-native-select\" \r\n        className='color-dark1-light'\r\n        fullWidth\r\n        value={lumber} \r\n        onChange={setLumber}\r\n        name={lumber_input_label}\r\n        >\r\n        <option aria-label=\"None\" />\r\n        <optgroup label=\"Брус сосна\">\r\n          {pineBrus.map(pb =>\r\n            <option value={pb.id} >{`${pb.name} ${pb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Брус лиственница\">\r\n          {larchBrus.map(lb =>\r\n            <option value={lb.id} >{`${lb.name} ${lb.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска сосна\">\r\n          {pineDoska.map(pd =>\r\n            <option value={pd.id} >{`${pd.name} ${pd.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n        <optgroup label=\"Доска лиственница\">\r\n          {larchDoska.map(ld =>\r\n            <option value={ld.id} >{`${ld.name} ${ld.wood_species}`} </option>\r\n            )}\r\n        </optgroup>\r\n      </Select>\r\n      <TextField \r\n        className='mt-3'\r\n        id=\"outlined-margin-dense\"\r\n        variant=\"outlined\" \r\n        label='Количество'\r\n        type='number'\r\n        name={lumber_input_quantity_label}\r\n        onChange={setLumber}\r\n        value={quantity}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function CreatedResaw (props) {\r\n  const { resaw, message } = props\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Запись сохранена</h4>\r\n        {resaw &&\r\n          <div className=''>            \r\n            <p className={rowClass}>Дата: {resaw.created_at}</p>\r\n            \r\n            <p className={rowClass}>Перепелили: {resaw.lumber_in_quantity}шт {resaw.lumber_in} </p>\r\n            <p className={rowClass}>Получили: {resaw.lumber_out_quantity}шт {resaw.lumber_out} </p>\r\n          </div>\r\n        }\r\n        {message &&\r\n          <h2 className='color-green1-light text-center'>Данные сохранены!</h2> \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawToCreate (props) {\r\n  const { resaw, saveData, back, lumbers } = props\r\n  let lumberIn = getObjectbyId(lumbers, resaw.lumber_in)\r\n  let lumberOut = getObjectbyId(lumbers, resaw.lumber_out)\r\n  const rowClass = 'mb-1 font-15 font-400 color-black'\r\n\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <h4>Проверяем данные</h4>\r\n        {resaw &&\r\n          <div className=''>\r\n            <p className={rowClass}>Перепиливаем : {lumberIn.name} {resaw.lumber_in_quantity} шт</p>\r\n            <p className={rowClass}>Получаем : {lumberOut.name} {resaw.lumber_out_quantity} шт</p>\r\n          </div>\r\n        }\r\n        <div className='d-flex justify-content-around'>\r\n          <button onClick={back}\r\n            className='btn btn-s mr-2 text-uppercase font-900 bg-dark color-white rounded-sm shadow-l'>\r\n            назад\r\n          </button>\r\n          <button onClick={saveData}\r\n            className='btn btn-s text-uppercase font-900 bg-highlight rounded-sm shadow-l mt-2'>\r\n              Сохранить данные\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ResawList (props) {\r\n  const { list, deleteResaw, user } = props\r\n  return (\r\n    <div className='card card-style mt-2'>\r\n      <div className='content'>\r\n        <table className='table table-sm' style={{lineHeight: '15px'}}>\r\n          <thead>\r\n            <th>\r\n              дата\\кто записал\r\n            </th>\r\n            <th>\r\n              что перепиливали\r\n            </th>\r\n            <th>\r\n              во что перепилили\r\n            </th>\r\n          </thead>\r\n          <tbody>\r\n            {list.length > 0 && list.map(rsw => \r\n              <tr>\r\n                <td>\r\n                  <span className='d-block'>{rsw.created_at}</span>\r\n                  <span className='font-600'>{rsw.who}</span>\r\n                </td>\r\n                <td>\r\n                  <span className='d-block'>{rsw.lumber_in_quantity}шт {rsw.lumber_in}</span>\r\n                  <span className='font-italic'>{rsw.lumber_in_wood_species}</span>\r\n                </td>\r\n                <td>\r\n                  <span className='d-block'>{rsw.lumber_out_quantity}шт {rsw.lumber_out}</span>\r\n                  <span className='font-italic'>{rsw.lumber_out_wood_species}</span>\r\n                </td>\r\n                {(user.is_manager) &&\r\n                  <td className='mr-3'>\r\n                    <button className='btn btn-s bg-red1-light mr-2 text-uppercase' \r\n                    onClick={() => deleteResaw(rsw.id)}>\r\n                      удалить</button>\r\n                  </td>\r\n                }\r\n              </tr>\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { createUrlParamsFromFilters } from '../../redux/api/utils';\r\n\r\nimport {  ResawToCreate, CreatedResaw, ResawInput, ResawList }  from '../../components/Resaw';\r\n\r\nexport class ResawContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pineBrus: [],\r\n      larchBrus: [],\r\n      pineDoska: [],\r\n      larchDoska: [],\r\n      \r\n      lumber_in: null,\r\n      lumber_in_quantity: null,\r\n      lumber_out: null,\r\n      lumber_out_quantity: null,\r\n\r\n      createdResaw: null,\r\n      dataToSave: null,\r\n\r\n      resawsList: []\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.MANAGER_SALE_INIT_DATA,\r\n      headers: { 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        pineBrus: initData.pine_brus_lumbers,\r\n        larchBrus: initData.larch_brus_lumbers,\r\n        pineDoska: initData.pine_doska_lumbers,\r\n        larchDoska: initData.larch_doska_lumbers,\r\n        lumbers: initData.lumbers,\r\n        });\r\n    })\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: endpoints.RESAWS,\r\n      headers: { 'Authorization': `JWT ${token}` },\r\n      params: createUrlParamsFromFilters({shop: this.props.shopToSee.id})\r\n    })\r\n    .then(res => {\r\n      const initData = res.data;\r\n      this.setState({ \r\n        resawsList: initData.results,\r\n        });\r\n    })\r\n  }\r\n\r\n  setLumber = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  preSave = () => {\r\n    const { lumber_in, lumber_in_quantity, lumber_out, lumber_out_quantity } = this.state\r\n    \r\n    let data = {\r\n      lumber_in: lumber_in,\r\n      lumber_in_quantity: lumber_in_quantity,\r\n      lumber_out: lumber_out,\r\n      lumber_out_quantity: lumber_out_quantity,\r\n      shop: this.props.shopToSee.id\r\n    }\r\n\r\n    this.setState({\r\n      dataToSave: data,\r\n    })\r\n  }\r\n\r\n  saveData = () => {\r\n    const { dataToSave } = this.state\r\n    const token = localStorage.getItem('token');\r\n    \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.MANAGER_RESAW_CREATE,\r\n      data: dataToSave,\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ message: response.data.message, createdResaw: response.data.created, \r\n        resawsList: response.data.resaws });\r\n    })\r\n  }\r\n\r\n  deleteResaw = (id) => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_delete_resaw(id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ resawsList: response.data.resaws });\r\n    })\r\n  }\r\n\r\n  back () {\r\n    this.setState({dataToSave: null})\r\n  }\r\n \r\n  render() {\r\n    const { createdResaw, dataToSave, message, resawsList } = this.state\r\n    const { user } = this.props\r\n    return (\r\n      <div className=''>\r\n        {createdResaw\r\n          ? <CreatedResaw resaw={createdResaw} message={message}/>\r\n          : dataToSave\r\n            ? <ResawToCreate resaw={dataToSave} saveData={this.saveData} back={this.back} \r\n                lumbers={this.state.lumbers}/>\r\n            : (user.is_manager) &&\r\n              <div className='card card-style mt-3'>\r\n                <div className='content'>\r\n                  <ResawInput \r\n                    lumber={this.state.lumber_in}\r\n                    quantity={this.state.lumber_in_quantity}\r\n                    setLumber={this.setLumber}\r\n                    pineBrus={this.state.pineBrus}\r\n                    pineDoska={this.state.pineDoska}\r\n                    larchBrus={this.state.larchBrus}\r\n                    larchDoska={this.state.larchDoska}\r\n\r\n                    label={'Что перепиливаем?'}\r\n                    lumber_input_label={'lumber_in'}\r\n                  />\r\n                  <div className='mt-3'>\r\n                    <ResawInput \r\n                      lumber={this.state.lumber_out}\r\n                      quantity={this.state.lumber_out_quantity}\r\n                      setLumber={this.setLumber}\r\n                      pineBrus={this.state.pineBrus}\r\n                      pineDoska={this.state.pineDoska}\r\n                      larchBrus={this.state.larchBrus}\r\n                      larchDoska={this.state.larchDoska}\r\n\r\n                      label={'Что получаем?'}\r\n                      lumber_input_label={'lumber_out'}\r\n                    />\r\n                  </div>\r\n                  <button className='btn btn-l bg-highlight mt-3' onClick={this.preSave}>\r\n                    Далее\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          }\r\n        <ResawList list={resawsList} deleteResaw={this.deleteResaw} user={user}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  user: state.auth.user,\r\n  shopToSee: state.auth.shopToSee,\r\n  state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResawContainer);","import axios from 'axios';\r\n\r\nimport React, { Component, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport endpoints from '../../redux/api/endpoints';\r\nimport { parseErrorData } from '../../redux/api/utils';\r\n\r\n\r\nexport function LastOperations (props){\r\n  const { lastOperations } = props\r\n  return (\r\n    <div className='card card-style mt-0'>\r\n      <div className='content'>\r\n        <h4>Последние операции</h4>\r\n        {lastOperations.length > 0 \r\n        ? <table className='table table-sm table-responsive' style={{lineHeight: '16px'}}>\r\n            <thead className=''>\r\n              <th>Дата</th>\r\n              <th>Тип</th>\r\n              <th>Поставщик</th>\r\n              <th>Сумма</th>\r\n            </thead>\r\n            <tbody>\r\n              {lastOperations.map(op => \r\n                <tr>\r\n                  <td className='text-nowrap'>{op.created_at}</td>\r\n                  <td>\r\n                    {op.record_type === 'withdraw_employee' \r\n                      ? 'Оплата поставщику' : 'Долг поставщику с прихода'}\r\n                  </td>\r\n                  <td>{op.employee}</td>\r\n                  <td className={op.record_type === 'withdraw_employee' \r\n                      ? 'color-red1-light font-16' :'color-green1-light font-16'}>\r\n                    {op.record_type === 'withdraw_employee' ? '-' + op.amount : '+' + op.amount}\r\n                  </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n          </table>\r\n        : <div>Нет операции</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CreateRamshik (props) {\r\n  const { newCash, newName, createRamshik, setData } = props\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const create = () => (\r\n    setOpen(false),\r\n    createRamshik()\r\n  )\r\n\r\n  return (\r\n    open \r\n      ? <div className='card card-style'>\r\n          <div className='content'>\r\n            <div className='  my-1'>\r\n              <TextField type='text' name='newName' value={newName} onChange={setData} label='Имя' \r\n                fullWidth className='mb-2'/>\r\n              <TextField type='number' name='newCash' value={newCash} onChange={setData} label='Баланс' fullWidth/>\r\n            </div>\r\n            <div className='d-flex justify-content-between mt-3'>\r\n              <button className='btn btn-s bg-highlight' onClick={create}>Создать</button>\r\n              <button className='btn btn-s bg-red1-light' onClick={() => setOpen(false)}>Отмена</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      : <div className='d-flex justify-content-center my-3'>\r\n          <button className='btn btn-l bg-highlight' onClick={setOpen}>\r\n            Создать нового поставщика\r\n          </button>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\nexport default class RamshikPayments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employees: [],\r\n      activeEmployee: null,\r\n      amount: 0,\r\n\r\n      last_payouts: [],\r\n\r\n      message: null,\r\n      error: null,\r\n\r\n      newName: '',\r\n      newCash: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    axios(\r\n      {\r\n        method: 'get',\r\n        url: endpoints.EMPLOYEE_PAYOUT_INIT_DATA,\r\n        headers: { 'Authorization': `JWT ${token}` }\r\n      }\r\n    )\r\n    .then(res => {\r\n        const initData = res.data;\r\n        this.setState({ ...this.state, employees: initData.employees, last_payouts: initData.last_payouts });\r\n      })\r\n  }\r\n\r\n  payout = () => {\r\n    const { activeEmployee, amount } = this.state\r\n    const token = localStorage.getItem('token');\r\n    const formData = new FormData();\r\n    formData.append(\"employee\", activeEmployee.id);\r\n    formData.append(\"amount\", amount);\r\n        \r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_PAYOUT,\r\n      data: formData,\r\n      headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ ...this.state, message: response.data.message, employees: response.data.employees,\r\n        activeEmployee: null, last_payouts: response.data.last_payouts\r\n      });\r\n    })\r\n    .catch(err => {\r\n        const error = new Error(err);\r\n        error.data = parseErrorData(err);\r\n        this.setState({ message: 'Ошибка' });\r\n        throw error;\r\n    })\r\n  }\r\n\r\n  setData = (e) =>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value \r\n    })\r\n  }\r\n\r\n  createRamshik = () => {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'post',\r\n      url: endpoints.EMPLOYEE_CREATE,\r\n      data: { nickname: this.state.newName, cash: this.state.newCash },\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  deleteRamshik = () => {\r\n    const token = localStorage.getItem('token');\r\n    axios({\r\n      method: 'delete',\r\n      url: endpoints.manager_ramshiki_delete(this.state.activeEmployee.id),\r\n      headers: { 'content-type': 'application/JSON', 'Authorization': `JWT ${token}` }\r\n    })\r\n    .then(response => {\r\n      this.setState({ employees: response.data.employees, activeEmployee: null });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { employees, activeEmployee, amount, message, last_payouts } = this.state\r\n    return (\r\n      <div className='mt-2'>\r\n        <div className='card card-style mb-2'>\r\n          <div className='content'>\r\n            <h4 className='mb-2'>Расчет поставщиков</h4>\r\n            <div className=''>\r\n              {employees.length > 0 &&\r\n                  <table className='table table-sm'>\r\n                    <thead>\r\n                      <th>поставщик</th>\r\n                      <th>баланс</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {employees.map(employee => \r\n                        <tr className={activeEmployee && activeEmployee.id === employee.id && 'bg-green1-light'}\r\n                          onClick={() => this.setState({...this.state, activeEmployee: employee, message: null})}>\r\n                          <td>{employee.nickname}</td>\r\n                          <td>{employee.cash} р /  {employee.cash_amount}</td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n              }\r\n              {activeEmployee && \r\n                <div className='w-100'>\r\n                  <span className='font-16 mr-3'>{activeEmployee.nickname}</span>\r\n                  <span className='font-16 font-600'>{activeEmployee.cash} р</span>\r\n                  <div className='d-flex justify-content-start mt-2 mb-4'>\r\n                    <TextField type='number' className='mr-3' value={amount}\r\n                      onChange={(e) => this.setState({...this.state, amount: e.target.value})} />\r\n                    <button className='d-block btn btn-s bg-green2-light'\r\n                      onClick={this.payout}>\r\n                      Оплатить\r\n                    </button>\r\n                  </div>\r\n                  <button className='d-block btn btn-s bg-red1-light mt-2'\r\n                    onClick={this.deleteRamshik}>\r\n                    Удалить поставщика\r\n                  </button>\r\n                </div>\r\n              }\r\n              {message &&\r\n                <p className='color-dark text-center'>{message}</p>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CreateRamshik newName={this.state.newName} newCash={this.state.newCash} setData={this.setData}\r\n          createRamshik={this.createRamshik}\r\n          />\r\n        <LastOperations lastOperations={last_payouts} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthActions from '../redux/redux-sauce/auth'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function requireAuthentication(Component, groups) {\r\n\r\n    class AuthenticatedComponent extends React.Component {\r\n        componentDidMount() {\r\n          const token = localStorage.getItem('token');\r\n          if (token) {\r\n            this.props.checkToken(token);\r\n          }\r\n        }\r\n\r\n        render() {\r\n          let { fetching, user } = this.props.state.auth\r\n          let access = false\r\n          \r\n          if (this.props.isLoggedIn) {\r\n            if (groups.includes('manager') && user.is_manager)\r\n              access = true\r\n\r\n            if (groups.includes('seller') && user.is_seller)\r\n              access = true\r\n          }\r\n\r\n          return (\r\n            fetching \r\n              ? <p>Loading</p>\r\n              : this.props.isLoggedIn\r\n                ? access\r\n                  ? <Component {...this.props} />\r\n                  : <h4 className='text-center my-5'>Нет прав</h4>\r\n                : <Redirect to={'/'}/>\r\n          )\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isLoggedIn: state.auth.isLoggedIn,\r\n        user: state.auth.user,\r\n        state: state\r\n    });\r\n\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        // checkAuth: (groups) => dispatch(authActions.checkAuthRequest(groups))\r\n        // auth\r\n        checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n    })\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Containers\r\nimport Main from './containers/Main';\r\nimport Header from './containers/HeaderContainer';\r\nimport ManagerShiftList  from './containers/manager/Shifts';\r\nimport ManagerStock from './containers/manager/Stock';\r\nimport ShiftCreateComponent from './containers/manager/CreateShift';\r\nimport SaleCreateCommonContainer from './containers/manager/SaleCreateCommon';\r\nimport SaleList from './containers/manager/SaleList';\r\nimport DailyRepContainer from './containers/manager/DailyRep';\r\nimport ExpensesContainer from './containers/manager/Expenses';\r\nimport ResawContainer from './containers/manager/Resaw';\r\nimport ManagerRamshikPayments  from './containers/manager/RamshikPayments';\r\n\r\nimport requireAuthentication from './containers/AuthContainer';\r\n\r\nconst store = configureStore()\r\n \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <SnackbarProvider maxSnack={3}>\r\n      <Router>\r\n        <div className='app' id=\"page\">\r\n          <Header />\r\n          <div className=\"page-content header-clear\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n\r\n              <Route exact path=\"/manager/shift_list/\" \r\n                component={requireAuthentication(ManagerShiftList, ['manager', 'seller'])} />\r\n\r\n              <Route exact path=\"/manager/stock/\" \r\n                component={requireAuthentication(ManagerStock, ['manager','seller'])} />\r\n\r\n              <Route exact path=\"/manager/sale_list/\" \r\n                component={requireAuthentication(SaleList, ['manager', 'seller'])} />\r\n\r\n              <Route exact path=\"/manager/shift/create_shift/\" \r\n                component={requireAuthentication(ShiftCreateComponent, ['manager', 'seller'])} />\r\n\r\n              <Route exact path=\"/manager/sales/create_sale/\" \r\n                component={requireAuthentication(SaleCreateCommonContainer, ['manager', 'seller'])} />       \r\n\r\n              <Route exact path=\"/manager/expenses/\" \r\n                component={requireAuthentication(ExpensesContainer, ['manager', 'seller'])} />\r\n\r\n              <Route exact path=\"/manager/daily_report/\" \r\n                component={requireAuthentication(DailyRepContainer, ['manager', 'seller'])} />\r\n\r\n              <Route exact path=\"/manager/resaws/create/\" \r\n                component={requireAuthentication(ResawContainer, ['manager' ])} />\r\n\r\n              <Route exact path=\"/manager/ramshik_payments/\" \r\n                component={requireAuthentication(ManagerRamshikPayments, ['manager', 'seller'])} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}